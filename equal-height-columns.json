{
    "name": "Equal Height Columns",
    "slug": "equal-height-columns",
    "version": "1.2.0",
    "author": "<a href=\"http:\/\/mightyminnow.com\">MIGHTYminnow, Mickey Kay, Braad Martin<\/a>",
    "author_profile": "https:\/\/profiles.wordpress.org\/mightyminnow\/",
    "contributors": {
        "mightyminnow": {
            "profile": "https:\/\/profiles.wordpress.org\/mightyminnow\/",
            "avatar": "https:\/\/secure.gravatar.com\/avatar\/e27be2b46bf91bf53ba2635b6cefcd87?s=96&d=monsterid&r=g",
            "display_name": "MIGHTYminnow"
        },
        "braad": {
            "profile": "https:\/\/profiles.wordpress.org\/braad\/",
            "avatar": "https:\/\/secure.gravatar.com\/avatar\/eddcc089bc94be57b4c6ebeb92b3a4f9?s=96&d=monsterid&r=g",
            "display_name": "Braad"
        },
        "mcguive7": {
            "profile": "https:\/\/profiles.wordpress.org\/mcguive7\/",
            "avatar": "https:\/\/secure.gravatar.com\/avatar\/7f50463fde09e84ea34769bfeca8cbb6?s=96&d=monsterid&r=g",
            "display_name": "Mickey Kay"
        }
    },
    "requires": "3.5",
    "tested": "6.5.0",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 98,
    "ratings": {
        "5": 40,
        "4": 0,
        "3": 0,
        "2": 1,
        "1": 0
    },
    "num_ratings": 41,
    "support_url": "https:\/\/wordpress.org\/support\/plugin\/equal-height-columns\/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 10000,
    "downloaded": 77634,
    "last_updated": "2024-04-08 12:16am GMT",
    "added": "2015-03-18",
    "homepage": "",
    "sections": {
        "description": "<p><strong>Compatible with PHP 8.2<\/strong><\/p>\n<p><strong>Like this plugin? Please consider <a href=\"https:\/\/wordpress.org\/support\/view\/plugin-reviews\/equal-height-columns\" rel=\"ugc\">leaving a 5-star review<\/a>.<\/strong><\/p>\n<p>Equal Height Columns lets you easily equalize the height of various columns and elements.<\/p>\n<h4>Features<\/h4>\n<ul>\n<li>Target unlimited elements and element groups<\/li>\n<li>Specify simple CSS\/jQuery selectors to target elements<\/li>\n<li>Specify breakpoint to kick in only at certain screen sizes<\/li>\n<li>Easy to use admin interface<\/li>\n<li>Heights are equalized immediately after the page has loaded<\/li>\n<li>Fully responsive (automatically updates on resize and orientationchange events)<\/li>\n<li>Works on mobile devices<\/li>\n<li>Works across all modern browsers (including IE8)<\/li>\n<li>Comes with custom event listener to manually trigger<\/li>\n<li>Super small &#8211; 8kB jQuery file size<\/li>\n<li>Trigger custom &#8216;equalheight&#8217; event to force resize<\/li>\n<\/ul>\n<h4>Instructions<\/h4>\n<ol>\n<li>Navigate to <strong>Settings &gt; Equal Height Columns<\/strong> in the WordPress admin.<\/li>\n<li>Enter a <em>selector<\/em> and <em>breakpoint<\/em> for the first <strong>column group<\/strong>.<\/li>\n<li>Add\/remove column groups by clicking the &#8220;+ Add More&#8221; and &#8220;Remove&#8221; buttons.<\/li>\n<\/ol>\n<h4>Advanced<\/h4>\n<p>Want to trigger the equalizing of the heights manually? No problem. You can skip entering a selector on the settings page and call the jQuery script yourself using one of two functions:<\/p>\n<pre><code>jQuery( '.selector' ).initEqualHeights();\n\n\/\/ Or\n\njQuery( '.selector' ).equalizeTheHeights();\n<\/code><\/pre>\n<p>The difference between these two functions is simply that <code>initEqualHeights()<\/code> will set up all the events for recalculating the heights when the window is resized or the global <code>equalheights<\/code> event is triggered, but <code>equalizeTheHeights()<\/code> will simply equalize the heights without involving any events.<\/p>\n<p>Both functions take three optional arguments, the minimum height (number of pixels), maximum height, and the breakpoint (below which the heights will revert to their original size):<\/p>\n<pre><code>jQuery( '.selector' ).initEqualHeights( minHeight, maxHeight, breakPoint );\n<\/code><\/pre>\n<p>So an example might look like this:<\/p>\n<pre><code>jQuery( '.selector' ).initEqualHeights( 200, 500, 768 );\n<\/code><\/pre>\n<p>When entering a selector on the settings page or using the <code>initEqualHeights()<\/code> method this plugin also adds an event &#8216;equalheights&#8217; to the window, allowing you to easily trigger the equalizing manually. This is useful if you have added new items to the page after it loads via AJAX. You can trigger the event like this:<\/p>\n<pre><code>jQuery( window ).trigger( 'equalheights' );\n<\/code><\/pre>\n<p>Another option for controlling which elements get equalized is the <code>equal_height_columns_elements<\/code> filter. This filter operates on the array of data that gets passed to the JS right before it is passed. This allows for developers to specify selectors that can&#8217;t be deleted from the settings page, and for programmaticly building selectors based on dynamic data. Here&#8217;s an example of how the filter can be used:<\/p>\n<pre><code>add_filter( 'equal_height_columns_elements', 'custom_ehc_elements' );\nfunction custom_ehc_elements( $elements ) {\n\n    $elements['element-groups']['custom'] = array(\n        'selector'   =&gt; '.ehc-target', \/\/ Selector goes here.\n        'breakpoint' =&gt; '768',\n    );\n\n    return $elements;\n}\n<\/code><\/pre>\n<p>The keys on the <code>element-groups<\/code> array used by selectors entered on the settings page will come in as numbered indexes, so to avoid collision it&#8217;s best to use named keys for any custom selectors (we&#8217;re using &#8216;custom&#8217; in the example above, but any unique string will work).<\/p>\n<p>This plugin is <a href=\"https:\/\/github.com\/MIGHTYminnow\/equal-height-columns\" rel=\"nofollow ugc\">on Github<\/a> and pull requests are always welcome.<\/p>\n<h4>NEW: Multi rows<\/h4>\n<p>On version <strong>1.2.0<\/strong> we are introducing a new feature <em>(for now, only available via JavaScript)<\/em> that resolves a common issue if the row number of certain elements varies across breakpoints when the number of columns change.<\/p>\n<p>For example, if we have 2 columns for tablets and 3 columns for desktops, the third element in the group would be positioned on the second row for tablets but on the first row for desktops.<\/p>\n<p>Before this new feature, the equal height would be based on all the elements from the group. Now you can have &#8220;subgroups&#8221; for each row, and recalculate when the number of columns in the rows change.<\/p>\n<p>To use this new feature add the function once per breakpoint:<\/p>\n<pre><code>jQuery( document ).equalHeight( selector, columns, minWidth, maxWidth );\n<\/code><\/pre>\n<p><strong>selector:<\/strong> The selector of the group of elements that you want to apply the equal height.<\/p>\n<p><strong>columns:<\/strong> The number of columns per row on the breakpoint.<\/p>\n<p><strong>minWidth:<\/strong> The minimum width of the breakpoint. Use 1 for mobile.<\/p>\n<p><strong>maxWidth:<\/strong> The maximum width of the breakpoint. You can leave empty for the biggest breakpoint.<\/p>\n<p>The following example would apply equal height for headings with the class <strong>.demo-heading<\/strong> in a grid that has 1 column per row on mobile, 2 columns on tablet and 3 columns on desktop:<\/p>\n<pre><code>$( document ).equalHeight( '.demo-heading', 1, 1, 767 ); \/\/ 1 columns for 1px - 767px\n$( document ).equalHeight( '.demo-heading', 2, 768, 1024 ); \/\/ 2 columns for 768px - 1024px\n$( document ).equalHeight( '.demo-heading', 3, 1025 ); \/\/ 3 columns for 1025px (and above)\n<\/code><\/pre>\n",
        "installation": "<h4>Manual Installation<\/h4>\n<ol>\n<li>Upload the entire <code>\/equal-height-columns<\/code> directory to the <code>\/wp-content\/plugins\/<\/code> directory.<\/li>\n<li>Activate Equal Height Columns through the &#8216;Plugins&#8217; menu in WordPress.<\/li>\n<\/ol>\n",
        "faq": "\n<dt id='is%20this%20plugin%20fully%20responsive%3F'>\nIs this plugin fully responsive?\n<\/h4>\n<p>\n<p>Yes! When the function runs it creates event listeners for the window resize and orientationchange events and recalculates the heights after those events trigger. You can also specify a breakpoint under which the function will not affect the heights, allowing you to equalize the heights for larger screens but leave smaller screens unaffected.<\/p>\n<\/p>\n<dt id='does%20the%20plugin%20support%20multiple%20collections%20of%20items%20that%20get%20equalized%20independently%3F'>\nDoes the plugin support multiple collections of items that get equalized independently?\n<\/h4>\n<p>\n<p>Yes! From the settings page you can enter as many selectors as you&#8217;d like, giving you the ability to equalize the heights of an unlimited number of items.<\/p>\n<\/p>\n<dt id='what%20if%20i%20am%20dynamically%20adding%20elements%20to%20the%20page%20after%20it%20loads%3F'>\nWhat if I am dynamically adding elements to the page after it loads?\n<\/h4>\n<p>\n<p>The jQuery script uses the selector to always grab the items fresh from the DOM in its current state, so as long as the selector matches the newly added elements they will get included in the calculation. You can trigger the equalizing manually at any time (such as after new content has been added via AJAX) by triggering the &#8216;equalheights&#8217; event on the window like this:<\/p>\n<pre><code>jQuery( window ).trigger( 'equalheights' );\n<\/code><\/pre>\n<p>Or if you&#8217;d prefer to just trigger the equalizing of the heights without involving any events, you can call the <code>equalizeTheHeights()<\/code> method directly like this:<\/p>\n<pre><code>jQuery( '.selector' ).equalizeTheHeights();\n<\/code><\/pre>\n<\/p>\n\n",
        "changelog": "<h3>1.2.0<\/h3>\n<ul>\n<li>NEW: Added multi-rows feature (javascript only).<\/li>\n<\/ul>\n<h3>1.1.4<\/h3>\n<ul>\n<li>Fire again Equal Height Columns if an image is lazy loaded inside the selector.<\/li>\n<\/ul>\n<h4>1.1.3<\/h4>\n<ul>\n<li>Fix PHP warning.<\/li>\n<\/ul>\n<h4>1.1.2<\/h4>\n<ul>\n<li>Update version number of the main javascript file to force clearing cache.<\/li>\n<\/ul>\n<h4>1.1.1<\/h4>\n<ul>\n<li>BUGFIX: The plugin was not working with WordPress 5.6 due a jQuery update incompatibility.<\/li>\n<\/ul>\n<h4>1.1.0<\/h4>\n<ul>\n<li>Add new method <code>equalizeTheHeights()<\/code> to allow direct equalizing of the heights without involving events<\/li>\n<li>Better code formatting and usage examples in the block comments<\/li>\n<li>Add new filter <code>equal_height_columns_elements<\/code><\/li>\n<\/ul>\n<h4>1.0.3<\/h4>\n<ul>\n<li>Fix JS error on activation (Uncaught TypeError: Cannot use &#8216;in&#8217; operator to search for &#8216;length&#8217; in&#8230;)<\/li>\n<\/ul>\n<h4>1.0.2<\/h4>\n<ul>\n<li>Only load admin JS on EHC settings page<\/li>\n<li>Make admin settings wrapper class and jQuery more specific to avoid potential conflicts<\/li>\n<\/ul>\n<h4>1.0.1<\/h4>\n<ul>\n<li>Improve admin (Mm)<\/li>\n<\/ul>\n<h4>1.0.0<\/h4>\n<ul>\n<li>First release<\/li>\n<\/ul>\n",
        "screenshots": "<ol><li><a href=\"https:\/\/ps.w.org\/equal-height-columns\/assets\/screenshot-1.png?rev=1114939\"><img src=\"https:\/\/ps.w.org\/equal-height-columns\/assets\/screenshot-1.png?rev=1114939\" alt=\"The easy-to-use admin interface.\"><\/a><p>The easy-to-use admin interface.<\/p><\/li><\/ol>",
        "reviews": "<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Does the job<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/brenteades\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/d7581ba7267480ce87eecb8d0783e07b?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/d7581ba7267480ce87eecb8d0783e07b?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/brenteades\/\" class=\"reviewer-name\">B Eades <small>(BrentEades)<\/small><\/a> on <span class=\"review-date\">December 29, 2021<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">I had it working fine on some fairly complex Elementor layouts in no time, which saved me doing a whole lot of custom CSS. Works exactly as advertised.<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Works great! awesome..<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/allnicheworld\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/e4f1a46988e767e6da37d7963d10db98?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/e4f1a46988e767e6da37d7963d10db98?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/allnicheworld\/\" class=\"reviewer-name\">ANW <small>(allnicheworld)<\/small><\/a> on <span class=\"review-date\">August 16, 2021<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">Thank you very much for the developed Equal Height Columns plugin...<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Didn&#039;t work for me<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"2 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"2\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-empty\"><\/span><span class=\"star dashicons dashicons-star-empty\"><\/span><span class=\"star dashicons dashicons-star-empty\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/luizzle\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/3f5117bd71d5bb14fd2bb49f82c2dc84?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/3f5117bd71d5bb14fd2bb49f82c2dc84?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/luizzle\/\" class=\"reviewer-name\">luizzle<\/a> on <span class=\"review-date\">September 9, 2020<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">Unfortunately, nothing happened<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Great plugin, You saved my life<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/taras21777\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/755433a357d17642c59c99ac63b65973?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/755433a357d17642c59c99ac63b65973?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/taras21777\/\" class=\"reviewer-name\">taras21777<\/a> on <span class=\"review-date\">May 28, 2020<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">I was trying to fix my columns using flex, but initial theme styles + pagebuilder makes it so unclear...\n\nTHANKS YOU SOOOOOOOOOOOO MUCH<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Great!<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/verzameldnieuws2016\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/c1bcf01efd460b1f024ca435d1912a8c?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/c1bcf01efd460b1f024ca435d1912a8c?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/verzameldnieuws2016\/\" class=\"reviewer-name\">VerzameldNieuws2016<\/a> on <span class=\"review-date\">December 27, 2018<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">This is really a great plugin. However, not tested with current Wordpress...<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">MAGIC...WOW!!!<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/bngari\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/9502662c4cd88d8b05121744211b8737?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/9502662c4cd88d8b05121744211b8737?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/bngari\/\" class=\"reviewer-name\">bngari<\/a> on <span class=\"review-date\">July 5, 2018<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">What a life saver<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Holy smokes!<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/biglesliep\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/b72f3d99f5e53e48f559c72a2fdb4891?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/b72f3d99f5e53e48f559c72a2fdb4891?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/biglesliep\/\" class=\"reviewer-name\">biglesliep<\/a> on <span class=\"review-date\">April 13, 2018<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">This is my dream come true. I spent several hours trying to get this to work via manual coding and could not get a cross-browser solution. I installed this plugin, changed ONE setting, and I'm done. Under 5 minutes, start to finish. Holy smokes.  THANK YOU!!<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Easy and quick!<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/shadley\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/4a7c1007d2a29c5b474b1e3bd1d5d661?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/4a7c1007d2a29c5b474b1e3bd1d5d661?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/shadley\/\" class=\"reviewer-name\">shadley<\/a> on <span class=\"review-date\">March 23, 2018<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">After wasting lots of time trying out various failed scripts and css styles on the internet, I stumbled across this plugin which sorted everything out in less than a minute.<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Just great!<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/4blogga\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/d28a909d111436ec701e0572ce9d8dbc?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/d28a909d111436ec701e0572ce9d8dbc?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/4blogga\/\" class=\"reviewer-name\">4blogga<\/a> on <span class=\"review-date\">October 19, 2017<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">Thanks!\nThis plugin is really great and simple to use.\n\nWasted a LOT of time trying to get same height columns in a row using SiteOrigin Page Builder: no solutions working in all cases except this plugin.\n\nMy best regards to developers!<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Works Like a charm even with woocommerce<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/incredibleanand\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/7033dc3987a6fc8d9ff636e05a118004?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/7033dc3987a6fc8d9ff636e05a118004?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/incredibleanand\/\" class=\"reviewer-name\">incredibleanand<\/a> on <span class=\"review-date\">July 8, 2017<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">Looked for hundreds of blogs on css, jquery etc for getting all the columns of same height but failed until I stumbled across this. thank you for the great work!<\/div>\n<\/div>\n"
    },
    "short_description": "Easily equalize the height of columns or any collection of elements.",
    "description": "<p><strong>Compatible with PHP 8.2<\/strong><\/p>\n<p><strong>Like this plugin? Please consider <a href=\"https:\/\/wordpress.org\/support\/view\/plugin-reviews\/equal-height-columns\" rel=\"ugc\">leaving a 5-star review<\/a>.<\/strong><\/p>\n<p>Equal Height Columns lets you easily equalize the height of various columns and elements.<\/p>\n<h4>Features<\/h4>\n<ul>\n<li>Target unlimited elements and element groups<\/li>\n<li>Specify simple CSS\/jQuery selectors to target elements<\/li>\n<li>Specify breakpoint to kick in only at certain screen sizes<\/li>\n<li>Easy to use admin interface<\/li>\n<li>Heights are equalized immediately after the page has loaded<\/li>\n<li>Fully responsive (automatically updates on resize and orientationchange events)<\/li>\n<li>Works on mobile devices<\/li>\n<li>Works across all modern browsers (including IE8)<\/li>\n<li>Comes with custom event listener to manually trigger<\/li>\n<li>Super small &#8211; 8kB jQuery file size<\/li>\n<li>Trigger custom &#8216;equalheight&#8217; event to force resize<\/li>\n<\/ul>\n<h4>Instructions<\/h4>\n<ol>\n<li>Navigate to <strong>Settings &gt; Equal Height Columns<\/strong> in the WordPress admin.<\/li>\n<li>Enter a <em>selector<\/em> and <em>breakpoint<\/em> for the first <strong>column group<\/strong>.<\/li>\n<li>Add\/remove column groups by clicking the &#8220;+ Add More&#8221; and &#8220;Remove&#8221; buttons.<\/li>\n<\/ol>\n<h4>Advanced<\/h4>\n<p>Want to trigger the equalizing of the heights manually? No problem. You can skip entering a selector on the settings page and call the jQuery script yourself using one of two functions:<\/p>\n<pre><code>jQuery( '.selector' ).initEqualHeights();\n\n\/\/ Or\n\njQuery( '.selector' ).equalizeTheHeights();\n<\/code><\/pre>\n<p>The difference between these two functions is simply that <code>initEqualHeights()<\/code> will set up all the events for recalculating the heights when the window is resized or the global <code>equalheights<\/code> event is triggered, but <code>equalizeTheHeights()<\/code> will simply equalize the heights without involving any events.<\/p>\n<p>Both functions take three optional arguments, the minimum height (number of pixels), maximum height, and the breakpoint (below which the heights will revert to their original size):<\/p>\n<pre><code>jQuery( '.selector' ).initEqualHeights( minHeight, maxHeight, breakPoint );\n<\/code><\/pre>\n<p>So an example might look like this:<\/p>\n<pre><code>jQuery( '.selector' ).initEqualHeights( 200, 500, 768 );\n<\/code><\/pre>\n<p>When entering a selector on the settings page or using the <code>initEqualHeights()<\/code> method this plugin also adds an event &#8216;equalheights&#8217; to the window, allowing you to easily trigger the equalizing manually. This is useful if you have added new items to the page after it loads via AJAX. You can trigger the event like this:<\/p>\n<pre><code>jQuery( window ).trigger( 'equalheights' );\n<\/code><\/pre>\n<p>Another option for controlling which elements get equalized is the <code>equal_height_columns_elements<\/code> filter. This filter operates on the array of data that gets passed to the JS right before it is passed. This allows for developers to specify selectors that can&#8217;t be deleted from the settings page, and for programmaticly building selectors based on dynamic data. Here&#8217;s an example of how the filter can be used:<\/p>\n<pre><code>add_filter( 'equal_height_columns_elements', 'custom_ehc_elements' );\nfunction custom_ehc_elements( $elements ) {\n\n    $elements['element-groups']['custom'] = array(\n        'selector'   =&gt; '.ehc-target', \/\/ Selector goes here.\n        'breakpoint' =&gt; '768',\n    );\n\n    return $elements;\n}\n<\/code><\/pre>\n<p>The keys on the <code>element-groups<\/code> array used by selectors entered on the settings page will come in as numbered indexes, so to avoid collision it&#8217;s best to use named keys for any custom selectors (we&#8217;re using &#8216;custom&#8217; in the example above, but any unique string will work).<\/p>\n<p>This plugin is <a href=\"https:\/\/github.com\/MIGHTYminnow\/equal-height-columns\" rel=\"nofollow ugc\">on Github<\/a> and pull requests are always welcome.<\/p>\n<h4>NEW: Multi rows<\/h4>\n<p>On version <strong>1.2.0<\/strong> we are introducing a new feature <em>(for now, only available via JavaScript)<\/em> that resolves a common issue if the row number of certain elements varies across breakpoints when the number of columns change.<\/p>\n<p>For example, if we have 2 columns for tablets and 3 columns for desktops, the third element in the group would be positioned on the second row for tablets but on the first row for desktops.<\/p>\n<p>Before this new feature, the equal height would be based on all the elements from the group. Now you can have &#8220;subgroups&#8221; for each row, and recalculate when the number of columns in the rows change.<\/p>\n<p>To use this new feature add the function once per breakpoint:<\/p>\n<pre><code>jQuery( document ).equalHeight( selector, columns, minWidth, maxWidth );\n<\/code><\/pre>\n<p><strong>selector:<\/strong> The selector of the group of elements that you want to apply the equal height.<\/p>\n<p><strong>columns:<\/strong> The number of columns per row on the breakpoint.<\/p>\n<p><strong>minWidth:<\/strong> The minimum width of the breakpoint. Use 1 for mobile.<\/p>\n<p><strong>maxWidth:<\/strong> The maximum width of the breakpoint. You can leave empty for the biggest breakpoint.<\/p>\n<p>The following example would apply equal height for headings with the class <strong>.demo-heading<\/strong> in a grid that has 1 column per row on mobile, 2 columns on tablet and 3 columns on desktop:<\/p>\n<pre><code>$( document ).equalHeight( '.demo-heading', 1, 1, 767 ); \/\/ 1 columns for 1px - 767px\n$( document ).equalHeight( '.demo-heading', 2, 768, 1024 ); \/\/ 2 columns for 768px - 1024px\n$( document ).equalHeight( '.demo-heading', 3, 1025 ); \/\/ 3 columns for 1025px (and above)\n<\/code><\/pre>\n",
    "download_link": "https:\/\/downloads.wordpress.org\/plugin\/equal-height-columns.1.2.0.zip",
    "upgrade_notice": {
        "1.1.0": "<ul>\n<li>Add new method <code>equalizeTheHeights()<\/code> to allow direct equalizing of the heights without involving events<\/li>\n<li>Better code formatting and usage examples in the block comments<\/li>\n<li>Add new filter <code>equal_height_columns_elements<\/code><\/li>\n<\/ul>",
        "1.0.3": "<ul>\n<li>Fix JS error on activation (Uncaught TypeError: Cannot use &#039;in&#039; operator to search for &#039;length&#039; in...<\/li>\n<\/ul>",
        "1.0.2": "<ul>\n<li>Only load admin JS on EHC settings page<\/li>\n<li>Make admin settings wrapper class and jQuery more specific to avoid potential conflicts<\/li>\n<\/ul>",
        "1.0.1": "<ul>\n<li>Improve admin (Mm)<\/li>\n<\/ul>",
        "1.0.0": "<p>First Release<\/p>"
    },
    "screenshots": {
        "1": {
            "src": "https:\/\/ps.w.org\/equal-height-columns\/assets\/screenshot-1.png?rev=1114939",
            "caption": "The easy-to-use admin interface."
        }
    },
    "tags": {
        "column": "column",
        "div": "div",
        "element": "element",
        "equal": "equal",
        "height": "height"
    },
    "stable_tag": "1.2.0",
    "versions": {
        "1.0.0": "https:\/\/downloads.wordpress.org\/plugin\/equal-height-columns.1.0.0.zip",
        "1.0.1": "https:\/\/downloads.wordpress.org\/plugin\/equal-height-columns.1.0.1.zip",
        "1.0.2": "https:\/\/downloads.wordpress.org\/plugin\/equal-height-columns.1.0.2.zip",
        "1.0.3": "https:\/\/downloads.wordpress.org\/plugin\/equal-height-columns.1.0.3.zip",
        "1.1.0": "https:\/\/downloads.wordpress.org\/plugin\/equal-height-columns.1.1.0.zip",
        "1.1.1": "https:\/\/downloads.wordpress.org\/plugin\/equal-height-columns.1.1.1.zip",
        "1.1.2": "https:\/\/downloads.wordpress.org\/plugin\/equal-height-columns.1.1.2.zip",
        "1.1.3": "https:\/\/downloads.wordpress.org\/plugin\/equal-height-columns.1.1.3.zip",
        "1.1.4": "https:\/\/downloads.wordpress.org\/plugin\/equal-height-columns.1.1.4.zip",
        "1.2.0": "https:\/\/downloads.wordpress.org\/plugin\/equal-height-columns.1.2.0.zip",
        "trunk": "https:\/\/downloads.wordpress.org\/plugin\/equal-height-columns.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "http:\/\/mightyminnow.com",
    "banners": {
        "low": "https:\/\/ps.w.org\/equal-height-columns\/assets\/banner-772x250.png?rev=1114939",
        "high": "https:\/\/ps.w.org\/equal-height-columns\/assets\/banner-1544x500.png?rev=1114939"
    },
    "icons": {
        "1x": "https:\/\/ps.w.org\/equal-height-columns\/assets\/icon-128x128.png?rev=1114939"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 98,
    "blueprints": [],
    "preview_link": "",
    "language_packs": [
        {
            "type": "plugin",
            "slug": "equal-height-columns",
            "language": "nl_BE",
            "version": "1.2.0",
            "updated": "2023-03-13 15:01:08",
            "package": "https:\/\/downloads.wordpress.org\/translation\/plugin\/equal-height-columns\/1.2.0\/nl_BE.zip"
        }
    ]
}