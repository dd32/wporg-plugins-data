{
    "name": "Variable Inspector",
    "slug": "variable-inspector",
    "version": "2.6.1",
    "author": "<a href=\"https:\/\/bowo.io\">Bowo<\/a>",
    "author_profile": "https:\/\/profiles.wordpress.org\/qriouslad\/",
    "contributors": {
        "qriouslad": {
            "profile": "https:\/\/profiles.wordpress.org\/qriouslad\/",
            "avatar": "https:\/\/secure.gravatar.com\/avatar\/d8cfd8f51c30981241e31e4e703c93a2?s=96&d=monsterid&r=g",
            "display_name": "Bowo"
        }
    },
    "requires": "4.8",
    "tested": "6.4.4",
    "requires_php": "5.6",
    "requires_plugins": [],
    "compatibility": [],
    "rating": 100,
    "ratings": {
        "5": 5,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 5,
    "support_url": "https:\/\/wordpress.org\/support\/plugin\/variable-inspector\/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 100,
    "downloaded": 4895,
    "last_updated": "2024-02-13 4:35pm GMT",
    "added": "2022-04-13",
    "homepage": "https:\/\/wordpress.org\/plugins\/variable-inspector\/",
    "sections": {
        "description": "<p>Variable Inspector allows you to easily inspect your PHP $variables in a visually clean manner at a central dashboard in wp-admin. It aims to be an <strong>easy and useful enough dev and debug tool<\/strong>.<\/p>\n<p>It provides <strong>a single-line code<\/strong> to inspect your variable (see &#8220;How to Use&#8221; below). Nothing is shown to site visitors nor being output on the frontend, and the <strong>$variable content is nicely formatted for review<\/strong> using <a href=\"https:\/\/www.php.net\/manual\/en\/function.var-dump.php\" rel=\"nofollow ugc\">var_dump()<\/a>, <a href=\"https:\/\/www.php.net\/manual\/en\/function.var-export.php\" rel=\"nofollow ugc\">var_export()<\/a> and <a href=\"https:\/\/www.php.net\/manual\/en\/function.print-r.php\" rel=\"nofollow ugc\">print_r()<\/a> on the inspector dashboard in wp-admin.<\/p>\n<p>It&#8217;s a real time-saver for scenarios where <a href=\"https:\/\/xdebug.org\/\" rel=\"nofollow ugc\">Xdebug<\/a> or even something like <a href=\"https:\/\/myray.app\/\" rel=\"nofollow ugc\">Ray<\/a> is not ideal or simply an overkill. For example, when coding on a non-local environment via tools like <a href=\"https:\/\/wordpress.org\/plugins\/code-snippets\/\" rel=\"ugc\">Code Snippets<\/a>, <a href=\"https:\/\/wpcodebox.com\/\" rel=\"nofollow ugc\">WPCodeBox<\/a>, <a href=\"https:\/\/dplugins.com\/products\/scripts-organizer\/\" rel=\"nofollow ugc\">Scripts Organizer<\/a> or <a href=\"https:\/\/www.cleanplugins.com\/products\/advanced-scripts\/\" rel=\"nofollow ugc\">Advanced Scripts<\/a>. Additionally, because it is a regular WordPress plugin, you simply install, activate and use without the need for complicated configuration.<\/p>\n<h3>What Users Say<\/h3>\n<p><em>&#8220;<strong>Huge time-saver when working with PHP variables<\/strong>.&#8221;<\/em> ~<a href=\"https:\/\/digwp.com\/2023\/06\/plugins-troubleshoot-debug-wordpress\/\" rel=\"nofollow ugc\">Jeff Starr<\/a><\/p>\n<p><em>&#8220;<strong>Works great!<\/strong> Love this thing.&#8221;<\/em> ~<a href=\"https:\/\/wordpress.org\/support\/topic\/works-great-8269\/\" rel=\"ugc\">Josh<\/a><\/p>\n<p><em>&#8220;<strong>Every developer need it.<\/strong> You can debug easily every variable.&#8221;<\/em> ~<a href=\"https:\/\/wordpress.org\/support\/topic\/awsome-plugin-that-every-developer-need-it\/\" rel=\"ugc\">Pexle Chris<\/a><\/p>\n<p><em>&#8220;<strong>All I need<\/strong>. Enough to test the function of snippets. Works flawless.&#8221;<\/em> ~<a href=\"https:\/\/wordpress.org\/support\/topic\/all-i-need-39\/\" rel=\"ugc\">@tesig<\/a><\/p>\n<p><em>&#8220;<strong>It does what it does very well<\/strong>, and doesn&#8217;t try to do everything.&#8221;<\/em> ~<a href=\"https:\/\/wordpress.org\/support\/topic\/exactly-what-i-needed-868\/\" rel=\"ugc\">@swb1<\/a><\/p>\n<h3>How to Use<\/h3>\n<p>Simply place the following line anywhere in your code after the <code>$variable_name<\/code> you&#8217;d like to inspect:<\/p>\n<pre><code>do_action( 'inspect', [ 'variable_name', $variable_name ] );\n<\/code><\/pre>\n<p>If you&#8217;d like to record the originating PHP file and line number, append the PHP magic constants <code>__FILE__<\/code> and <code>__LINE__<\/code> as follows.<\/p>\n<pre><code>do_action( 'inspect', [ 'variable_name', $variable_name, __FILE__, __LINE__ ] );\n<\/code><\/pre>\n<p>This would help you locate and clean up the inspector lines once you&#8217;re done debugging.<\/p>\n<h3>Give Back<\/h3>\n<ul>\n<li><a href=\"https:\/\/bowo.io\/vi-rvw-dsc\" rel=\"nofollow ugc\">A nice review<\/a> would be great!<\/li>\n<li><a href=\"https:\/\/bowo.io\/vi-fdbk-dsc\" rel=\"nofollow ugc\">Give feedback<\/a> and help improve future versions.<\/li>\n<li><a href=\"https:\/\/bowo.io\/vi-gthb-dsc\" rel=\"nofollow ugc\">Github repo<\/a> to contribute code.<\/li>\n<li>Sponsor my work with as little as USD 1 <a href=\"https:\/\/bowo.io\/vi-sp-gth-rdm\" rel=\"nofollow ugc\">monthly<\/a> or <a href=\"https:\/\/bowo.io\/vi-sp-ppl-rdm\" rel=\"nofollow ugc\">one-time<\/a>.<\/li>\n<\/ul>\n<h3>PRO Version<\/h3>\n<p>If you need something more versatile for larger, more complex projects, these <a href=\"https:\/\/bowo.io\/vi-up-hstd-dsc\" rel=\"nofollow ugc\">PRO features<\/a> might come in handy:<\/p>\n<ul>\n<li><strong>vi( $variable )<\/strong> inspector to replace the do_action() above and automatically includes the file path and line number. Or, use <strong>vis( $variable_name, &#8216;variable_name&#8217; )<\/strong> when inspecting in\/via code snippets plugins (Code Snippets, WPCodeBox, Scripts Organizer, etc.) or custom code module of page builders (Bricks, Oxygen Builder, etc.)<\/li>\n<li><strong>dump_print_r<\/strong> and <strong>dump_print_tree<\/strong> viewers: both viewers combines var_dump and print_r, with the later allowing for collapsing and expanding data nodes, which is especially useful for inspecting long and complex arrays and objects.<\/li>\n<li><strong>kint<\/strong> viewer: an advanced viewer with table view for multi-dimensional arrays, node access path info, capability to search inside variables, pop-up window viewing and advanced info for your complex objects, e.g. available methods and static class properties.<\/li>\n<li><strong>Categorize and filter results by color<\/strong>. This, for example, allows you to categorize $variables according to which stage they&#8217;re in inside your code.<\/li>\n<li><strong>Add counter or notes<\/strong> to inspection results. Another way to tag $variables and provide context for the inspection results.<\/li>\n<li><strong>Search filter<\/strong>: easily find certain $variables by name and type.<\/li>\n<li><strong>View up to 250 results<\/strong>. The free version is limited to 25 results.<\/li>\n<li><strong>Individual and bulk deletion<\/strong> of results. Easily clean up your inspection dashboard from obsolete results you no longer need to reference. You can also select certain variables in bulk.<\/li>\n<\/ul>\n<p><a href=\"https:\/\/bowo.io\/vi-pro-scrsht-rdm\" rel=\"nofollow ugc\">Click here<\/a> to see a screenshot of the <a href=\"https:\/\/bowo.io\/vi-up-hstd-dsc\" rel=\"nofollow ugc\">PRO version<\/a> or see below in the screenshots section.<\/p>\n<h3>What PRO Users Say<\/h3>\n<p><em>&#8220;I was looking for a tool like this for a while. <strong>Great solution!<\/strong> Love this thing.&#8221;<\/em> ~Marco Frodl<\/p>\n<p><em>&#8220;I have used it for a couple of days and it has helped me a lot to <strong>go faster when debugging<\/strong>.&#8221;&#8221;<\/em> ~Javier Sor<\/p>\n<p><em>&#8220;I&#8217;ve only just started using it and it <strong>really helps me get my head around the code of a plugin<\/strong> I&#8217;m trying to customise&#8221;<\/em> ~Tim Dickinson<\/p>\n<p><em>&#8220;I&#8217;ve been testing it and I really like it. It <strong>helps a lot and saves a lot of time in development<\/strong>. It&#8217;s also compatible with Oxygen, Bricks, WPCodeBox, etc.&#8221;<\/em> ~Juan Jose Gonzalez, oxygenados.com<\/p>\n<p><em>&#8220;I just bought this! <strong>Great plugin<\/strong> &#8211; thank you for the hard work!&#8221;<\/em> ~Tim Dickinson<\/p>\n<p><em>&#8220;I used to use Ray locally, I&#8217;m also using Xdebug a lot .. if I need to debug some variables, I use Query Monitor. I bought this, because <strong>the UI is nice, it has all those good features from both worlds<\/strong>.&#8221;<\/em> ~Peter Morvay<\/p>\n<p><em>&#8220;Worth the buy! <strong>It is really good&#8230; great for debugging<\/strong>. Specially, when you want to write custom code or understand some snippet ChatGPT gave you.&#8221;<\/em> ~John D<\/p>\n<p><a href=\"https:\/\/bowo.io\/vi-up-hstd-dsc\" rel=\"nofollow ugc\">Get the PRO version now!<\/a><\/p>\n<h3>Check These Out Too<\/h3>\n<ul>\n<li><a href=\"https:\/\/wordpress.org\/plugins\/admin-site-enhancements\/\" rel=\"ugc\">Admin and Site Enhancements<\/a> helps you to easily enhance various admin workflows and site aspects while replacing multiple plugins doing it.<\/li>\n<li><a href=\"https:\/\/wordpress.org\/plugins\/system-dashboard\/\" rel=\"ugc\">System Dashboard<\/a>: Central dashboard to monitor various WordPress components, processes and data, including the server.<\/li>\n<li><a href=\"https:\/\/wordpress.org\/plugins\/debug-log-manager\/\" rel=\"ugc\">Debug Log Manager<\/a>: Log PHP, database and JavaScript errors via WP_DEBUG with one click. Conveniently create, view, filter and clear the debug.log file.<\/li>\n<li><a href=\"https:\/\/bowo.io\/vi-wpn-dsc\" rel=\"nofollow ugc\">WordPress Newsboard<\/a>: The latest news, articles, podcasts and videos from 100+ WordPress-focused sources.<\/li>\n<\/ul>\n",
        "faq": "\n<dt id='how%20was%20this%20plugin%20built%3F'>\nHow was this plugin built?\n<\/h4>\n<p>\n<p>Variable Inspector was built with: <a href=\"https:\/\/github.com\/devinvinson\/WordPress-Plugin-Boilerplate\/\" rel=\"nofollow ugc\">WordPress Plugin Boilerplate<\/a> | <a href=\"https:\/\/wppb.me\/\" rel=\"nofollow ugc\">wppb.me<\/a> | <a href=\"https:\/\/codepen.io\/gecugamo\/pen\/xGLyXe\" rel=\"nofollow ugc\">Simple Accordion<\/a> | <a href=\"https:\/\/fomantic-ui.com\/\" rel=\"nofollow ugc\">Fomantic UI<\/a>. It was originally inspired by <a href=\"https:\/\/wordpress.org\/plugins\/wp-data-logger\/\" rel=\"ugc\">WP Logger<\/a>.<\/p>\n<\/p>\n\n",
        "changelog": "<h3>Sponsor Variable Inspector<\/h3>\n<p>If this plugin has been useful for your <strong>personal project(s), paid dev work, client site(s) and or agency&#8217;s workflow<\/strong>, please kindly consider <strong>sponsoring from as little as USD 1<\/strong> (<a href=\"https:\/\/bowo.io\/vi-sp-gth-chnlg\" rel=\"nofollow ugc\">monthly<\/a> or <a href=\"https:\/\/bowo.io\/vi-sp-ppl-chnlg\" rel=\"nofollow ugc\">one-time<\/a>). You can also choose to <a href=\"https:\/\/bowo.io\/vi-up-chnlg\" rel=\"nofollow ugc\">upgrade to the PRO version<\/a>. Thank you!<\/p>\n<h3>2.6.1 (2024.02.13)<\/h3>\n<ul>\n<li>Disable certain viewers from inspecting variables of the object type as they can trigger fatal errors rendering the inspection dashboard unusable.<\/li>\n<li>[PRO] Added bulk select of inspection results, which allows for bulk selecting certain variable_names. Also added bulk deselect.<\/li>\n<li>[PRO] Fix dump_print_r output when text is truncated.<\/li>\n<\/ul>\n<h3>2.5.1 (2023.07.20)<\/h3>\n<ul>\n<li>Fixed an issue where DB table creation failed when DB collation is empty\/undefined for certain hosting \/ server set up.<\/li>\n<\/ul>\n<h3>2.5.0 (2023.07.05)<\/h3>\n<ul>\n<li>Implement Source Sans Pro font for all viewers<\/li>\n<li>[PRO] Use semi-bold for keys to improve results readability<\/li>\n<\/ul>\n<h3>2.4.3.1 (2023.05.24)<\/h3>\n<ul>\n<li>Fix JS syntax error rendering inspection dashboard disfunctional. Props to <a href=\"https:\/\/wordpress.org\/support\/users\/chillifish\/\" rel=\"ugc\">@chillifish<\/a> for <a href=\"https:\/\/wordpress.org\/support\/topic\/none-of-the-links-in-admin-work\/\" rel=\"ugc\">reporting it<\/a>.<\/li>\n<\/ul>\n<h3>2.4.3 (2023.05.22)<\/h3>\n<ul>\n<li>Add handling for null type \/ value<\/li>\n<li>Added link to changelog in footer<\/li>\n<li>[PRO] Feedback link in header no longer links to wordpress.org support forum. It now links to the contact form within wp-admin.<\/li>\n<li>[PRO] Fixed: space in vis() inspector&#8217;s second parameter no longer causes JS error and prevents variable content from loading. This is handled by converting space to underscore, e.g. &#8216;the variable&#8217; will show up as $the_variable in the inspection result accordion.<\/li>\n<li>[PRO] Fixed: special characters inside the &#8216;notes&#8217; parameter in vi() and vis() inspectors are now handled better and won&#8217;t cause JS error.<\/li>\n<li>[PRO] Fixed: JS error &#8220;Maximum call stack size exceeded&#8221; when performing ajax actions, e.g. generate sample results, refrehs, etc.<\/li>\n<li>[PRO] kint viewer: now will properly show $variable_name when getting the access path info of each node in the inspection result<\/li>\n<li>[PRO] Make the style of NULL results uniform across var_dump_r, var_dump_tree and kint viewers<\/li>\n<\/ul>\n<h3>2.4.0 (2023.05.15)<\/h3>\n<ul>\n<li>[PRO] Added vis() inspector for inspecting $variables via code snippets plugins or custom code modules of page builders<\/li>\n<li>Remove freemius SDK from free version<\/li>\n<\/ul>\n<h3>2.3.0 (2023.04.24)<\/h3>\n<ul>\n<li>Add identification and labeling of &#8216;float&#8217; \/ &#8216;double&#8217; variable type<\/li>\n<li>Add results counter. Shown next to the &#8216;Results&#8217; heading.<\/li>\n<li>Added modal window for sponsorship<\/li>\n<li>Launch of PRO version. To find out and\/or upgrade, simply click on the green &#8216;Upgrade&#8217; button in the inspection dashboard. Lifetime license is available.<\/li>\n<\/ul>\n<h3>2.2.1 (2023.04.16)<\/h3>\n<ul>\n<li>Improve escaping of variables with string type. Preventing inspector layout \/ HTML output interferrence, especially when the string contains HTML tags.<\/li>\n<\/ul>\n<h3>2.2.0 (2023.04.13)<\/h3>\n<ul>\n<li>Clean up and polish inspector dashboard UI. Remove separator lines.<\/li>\n<li>Update shortlinks on the dashboard.<\/li>\n<\/ul>\n<h3>2.1.0 (2023.04.11)<\/h3>\n<ul>\n<li>Limit height of each result&#8217;s content and add scroll bar when content is taller than the limit. This should prevent very long result content from occupying the screen.<\/li>\n<li>Change background color of each result&#8217;s content to white for better readability.<\/li>\n<\/ul>\n<h3>2.0.0 (2023.04.10)<\/h3>\n<ul>\n<li>Add button to easily generate sample results. Useful for first-time installation.<\/li>\n<li>Overall UI\/X polish which includes adding loading animation on button clicks, improved auto-refresh UI, improved readability of variable type labels and ensure preferred\/chosen viewer is effective\/respected after varioius clicks \/ interaction with the inspection dashboard.<\/li>\n<li>Change &#8216;Donate&#8217; (PayPal) link to <a href=\"https:\/\/bowo.io\/sponsor-vi\" rel=\"nofollow ugc\">(Github) &#8216;Sponsor&#8217;<\/a> link. Do consider sponsoring the continued development of Variable Inspector.<\/li>\n<li>Add link to <a href=\"https:\/\/bowo.io\/wpn-vi\" rel=\"nofollow ugc\">WordPress Newsboard<\/a> in footer, a WordPress news aggregator site I&#8217;ve maintained since 2014.<\/li>\n<li>Integrate Freemius SDK in preparation for Pro version.<\/li>\n<\/ul>\n<h3>1.9.0 (2023.04.04)<\/h3>\n<ul>\n<li>Move storage of preferred inspection method from wp_options to user meta.<\/li>\n<\/ul>\n<h3>1.8.0 (2022.12.08)<\/h3>\n<ul>\n<li>Fix an issue where sometimes inspection shows empty or false result when result type is array or object.<\/li>\n<li>Additional suppression of admin notices via all_admin_notices hook and via CSS.<\/li>\n<\/ul>\n<h3>1.7.1 (2022.10.25)<\/h3>\n<ul>\n<li>All admin notices are now suppressed, i.e. no longer shown, on the Variable Inspector page.<\/li>\n<\/ul>\n<h3>1.7.0 (2022.10.11)<\/h3>\n<ul>\n<li>Add viewer (function) selector, e.g. print_r, that will apply to all inspection results after the selection is made and will persist after page reload. The selection is stored in wp_options table. Different viewer can still be selected for each result. Props to <a href=\"https:\/\/profiles.wordpress.org\/pexlechris\/\" rel=\"nofollow ugc\">@pexlechris<\/a> for <a href=\"https:\/\/wordpress.org\/support\/topic\/awsome-plugin-that-every-developer-need-it\/\" rel=\"ugc\">the feedback<\/a>.<\/li>\n<\/ul>\n<h3>1.6.0 (2022.10.11)<\/h3>\n<ul>\n<li>Add toggle to expand or collapse all inspection results. Props to <a href=\"https:\/\/profiles.wordpress.org\/pexlechris\/\" rel=\"nofollow ugc\">@pexlechris<\/a> for <a href=\"https:\/\/wordpress.org\/support\/topic\/awsome-plugin-that-every-developer-need-it\/\" rel=\"ugc\">the feedback<\/a>.<\/li>\n<\/ul>\n<h3>1.5.0 (2022.10.09)<\/h3>\n<ul>\n<li>Remove CodeStar framework dependency and replace with lightweight solution<\/li>\n<li>Dequeue public css and js files as they are empty and unused<\/li>\n<\/ul>\n<h3>1.4.0 (2022.08.18)<\/h3>\n<ul>\n<li>Add Refresh button and &#8220;Auto refresh&#8221; checkbox to load latest results. Props to <a href=\"https:\/\/github.com\/imantsk\" rel=\"nofollow ugc\">@imantsk<\/a> for the <a href=\"https:\/\/github.com\/qriouslad\/variable-inspector\/issues\/3\" rel=\"nofollow ugc\">code and suggestion<\/a><\/li>\n<li>Add quick tutorial on the inspector results page to enable users to quickly reference the inspector code<\/li>\n<\/ul>\n<h3>1.3.2 (2022.05.26)<\/h3>\n<ul>\n<li>Confirmed compatibility with WordPress 6.0<\/li>\n<\/ul>\n<h3>1.3.1 (2022.05.19)<\/h3>\n<ul>\n<li>Fixed output via var_export()<\/li>\n<li>Better sanitization of variable name output<\/li>\n<li>Update plugin description<\/li>\n<\/ul>\n<h3>1.2.0 (2022.04.14)<\/h3>\n<ul>\n<li>Fixed output buffering mistake causing the output of the &#8216;1&#8217; character in variable values<\/li>\n<li>NEW: implement tabbed output of var_export, var_dump and print_r<\/li>\n<\/ul>\n<h3>1.1.0 (2022.04.13)<\/h3>\n<ul>\n<li>Fixed &#8220;Fatal error: Uncaught Error: Call to undefined function dbDelta()&#8221;. Thanks to <a href=\"https:\/\/profiles.wordpress.org\/rashedul007\/\" rel=\"nofollow ugc\">@rashedul007<\/a> for <a href=\"https:\/\/github.com\/qriouslad\/variable-inspector\/pull\/2\" rel=\"nofollow ugc\">the fix<\/a>!<\/li>\n<\/ul>\n<h3>1.0.1 (2022.04.13)<\/h3>\n<ul>\n<li>Initial stable release<\/li>\n<\/ul>\n",
        "screenshots": "<ol><li><a href=\"https:\/\/ps.w.org\/variable-inspector\/assets\/screenshot-1.png?rev=2896331\"><img src=\"https:\/\/ps.w.org\/variable-inspector\/assets\/screenshot-1.png?rev=2896331\" alt=\"The variable inspection dashboard\"><\/a><p>The variable inspection dashboard<\/p><\/li><li><a href=\"https:\/\/ps.w.org\/variable-inspector\/assets\/screenshot-2.png?rev=2903221\"><img src=\"https:\/\/ps.w.org\/variable-inspector\/assets\/screenshot-2.png?rev=2903221\" alt=\"The PRO version\"><\/a><p>The PRO version<\/p><\/li><\/ol>",
        "reviews": "<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Interesting To Play With and Debug<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/mediteranija\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/a28cdc61305a7607f629647ed1f62b14?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/a28cdc61305a7607f629647ed1f62b14?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/mediteranija\/\" class=\"reviewer-name\">mediteranija<\/a> on <span class=\"review-date\">August 11, 2023<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\"><!-- wp:paragraph -->\n<p class=\"\">I really like what I see. It's a nice little plugin with the sole purpose of helping you to debug and read variables in an easy and quality way.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p class=\"\">I've just tested it on my dev site, but can't wait to use it on a real project.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p class=\"\">I can see how it would have helped me in the past.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p class=\"\">P.S. I've bought PRO version and plan on keeping it!<\/p>\n<!-- \/wp:paragraph --><\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">All I need<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/tesig\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/5b69d06105c662d799665adfaa048c46?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/5b69d06105c662d799665adfaa048c46?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/tesig\/\" class=\"reviewer-name\">tesig<\/a> on <span class=\"review-date\">April 24, 2023<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\"><!-- wp:paragraph -->\n<p>Enough to test the function of snippets. Works flawless.<\/p>\n<!-- \/wp:paragraph --><\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Awsome plugin that every developer need it<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/pexlechris\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/14ae9e475228f2f63f855532b9ac17c7?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/14ae9e475228f2f63f855532b9ac17c7?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/pexlechris\/\" class=\"reviewer-name\">Pexle Chris <small>(pexlechris)<\/small><\/a> on <span class=\"review-date\">October 10, 2022<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">It is a great plugin for developer use! You can debug easily every variable without printing needed anymore.\n\nYou also can add feature to \"display all\" and \"hide all\" by default, saving maybe to a cookie.\nAnd also let users save their favorite view \"var_export\" or \"var_dump\" or \"print_r\"<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Exactly what I needed<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/swb1\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/d0dc6eab72c1c2b4f94be0f9be82417c?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/d0dc6eab72c1c2b4f94be0f9be82417c?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/swb1\/\" class=\"reviewer-name\">swb1<\/a> on <span class=\"review-date\">August 27, 2022<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">It does what it does very well, and doesn't try to do everything. <\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Works great!<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/joshintosh\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/77eeba99883836acac96caf24e1a8ff5?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/77eeba99883836acac96caf24e1a8ff5?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/joshintosh\/\" class=\"reviewer-name\">Josh <small>(joshintosh)<\/small><\/a> on <span class=\"review-date\">May 17, 2022<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">Works great on a single install, but not so much on a multisite. Any interest in making it work on a multisite? Either way, thanks for your work, love this thing. <\/div>\n<\/div>\n"
    },
    "short_description": "Inspect PHP variables on a central dashboard in wp-admin for convenient debugging.",
    "description": "<p>Variable Inspector allows you to easily inspect your PHP $variables in a visually clean manner at a central dashboard in wp-admin. It aims to be an <strong>easy and useful enough dev and debug tool<\/strong>.<\/p>\n<p>It provides <strong>a single-line code<\/strong> to inspect your variable (see &#8220;How to Use&#8221; below). Nothing is shown to site visitors nor being output on the frontend, and the <strong>$variable content is nicely formatted for review<\/strong> using <a href=\"https:\/\/www.php.net\/manual\/en\/function.var-dump.php\" rel=\"nofollow ugc\">var_dump()<\/a>, <a href=\"https:\/\/www.php.net\/manual\/en\/function.var-export.php\" rel=\"nofollow ugc\">var_export()<\/a> and <a href=\"https:\/\/www.php.net\/manual\/en\/function.print-r.php\" rel=\"nofollow ugc\">print_r()<\/a> on the inspector dashboard in wp-admin.<\/p>\n<p>It&#8217;s a real time-saver for scenarios where <a href=\"https:\/\/xdebug.org\/\" rel=\"nofollow ugc\">Xdebug<\/a> or even something like <a href=\"https:\/\/myray.app\/\" rel=\"nofollow ugc\">Ray<\/a> is not ideal or simply an overkill. For example, when coding on a non-local environment via tools like <a href=\"https:\/\/wordpress.org\/plugins\/code-snippets\/\" rel=\"ugc\">Code Snippets<\/a>, <a href=\"https:\/\/wpcodebox.com\/\" rel=\"nofollow ugc\">WPCodeBox<\/a>, <a href=\"https:\/\/dplugins.com\/products\/scripts-organizer\/\" rel=\"nofollow ugc\">Scripts Organizer<\/a> or <a href=\"https:\/\/www.cleanplugins.com\/products\/advanced-scripts\/\" rel=\"nofollow ugc\">Advanced Scripts<\/a>. Additionally, because it is a regular WordPress plugin, you simply install, activate and use without the need for complicated configuration.<\/p>\n<h3>What Users Say<\/h3>\n<p><em>&#8220;<strong>Huge time-saver when working with PHP variables<\/strong>.&#8221;<\/em> ~<a href=\"https:\/\/digwp.com\/2023\/06\/plugins-troubleshoot-debug-wordpress\/\" rel=\"nofollow ugc\">Jeff Starr<\/a><\/p>\n<p><em>&#8220;<strong>Works great!<\/strong> Love this thing.&#8221;<\/em> ~<a href=\"https:\/\/wordpress.org\/support\/topic\/works-great-8269\/\" rel=\"ugc\">Josh<\/a><\/p>\n<p><em>&#8220;<strong>Every developer need it.<\/strong> You can debug easily every variable.&#8221;<\/em> ~<a href=\"https:\/\/wordpress.org\/support\/topic\/awsome-plugin-that-every-developer-need-it\/\" rel=\"ugc\">Pexle Chris<\/a><\/p>\n<p><em>&#8220;<strong>All I need<\/strong>. Enough to test the function of snippets. Works flawless.&#8221;<\/em> ~<a href=\"https:\/\/wordpress.org\/support\/topic\/all-i-need-39\/\" rel=\"ugc\">@tesig<\/a><\/p>\n<p><em>&#8220;<strong>It does what it does very well<\/strong>, and doesn&#8217;t try to do everything.&#8221;<\/em> ~<a href=\"https:\/\/wordpress.org\/support\/topic\/exactly-what-i-needed-868\/\" rel=\"ugc\">@swb1<\/a><\/p>\n<h3>How to Use<\/h3>\n<p>Simply place the following line anywhere in your code after the <code>$variable_name<\/code> you&#8217;d like to inspect:<\/p>\n<pre><code>do_action( 'inspect', [ 'variable_name', $variable_name ] );\n<\/code><\/pre>\n<p>If you&#8217;d like to record the originating PHP file and line number, append the PHP magic constants <code>__FILE__<\/code> and <code>__LINE__<\/code> as follows.<\/p>\n<pre><code>do_action( 'inspect', [ 'variable_name', $variable_name, __FILE__, __LINE__ ] );\n<\/code><\/pre>\n<p>This would help you locate and clean up the inspector lines once you&#8217;re done debugging.<\/p>\n<h3>Give Back<\/h3>\n<ul>\n<li><a href=\"https:\/\/bowo.io\/vi-rvw-dsc\" rel=\"nofollow ugc\">A nice review<\/a> would be great!<\/li>\n<li><a href=\"https:\/\/bowo.io\/vi-fdbk-dsc\" rel=\"nofollow ugc\">Give feedback<\/a> and help improve future versions.<\/li>\n<li><a href=\"https:\/\/bowo.io\/vi-gthb-dsc\" rel=\"nofollow ugc\">Github repo<\/a> to contribute code.<\/li>\n<li>Sponsor my work with as little as USD 1 <a href=\"https:\/\/bowo.io\/vi-sp-gth-rdm\" rel=\"nofollow ugc\">monthly<\/a> or <a href=\"https:\/\/bowo.io\/vi-sp-ppl-rdm\" rel=\"nofollow ugc\">one-time<\/a>.<\/li>\n<\/ul>\n<h3>PRO Version<\/h3>\n<p>If you need something more versatile for larger, more complex projects, these <a href=\"https:\/\/bowo.io\/vi-up-hstd-dsc\" rel=\"nofollow ugc\">PRO features<\/a> might come in handy:<\/p>\n<ul>\n<li><strong>vi( $variable )<\/strong> inspector to replace the do_action() above and automatically includes the file path and line number. Or, use <strong>vis( $variable_name, &#8216;variable_name&#8217; )<\/strong> when inspecting in\/via code snippets plugins (Code Snippets, WPCodeBox, Scripts Organizer, etc.) or custom code module of page builders (Bricks, Oxygen Builder, etc.)<\/li>\n<li><strong>dump_print_r<\/strong> and <strong>dump_print_tree<\/strong> viewers: both viewers combines var_dump and print_r, with the later allowing for collapsing and expanding data nodes, which is especially useful for inspecting long and complex arrays and objects.<\/li>\n<li><strong>kint<\/strong> viewer: an advanced viewer with table view for multi-dimensional arrays, node access path info, capability to search inside variables, pop-up window viewing and advanced info for your complex objects, e.g. available methods and static class properties.<\/li>\n<li><strong>Categorize and filter results by color<\/strong>. This, for example, allows you to categorize $variables according to which stage they&#8217;re in inside your code.<\/li>\n<li><strong>Add counter or notes<\/strong> to inspection results. Another way to tag $variables and provide context for the inspection results.<\/li>\n<li><strong>Search filter<\/strong>: easily find certain $variables by name and type.<\/li>\n<li><strong>View up to 250 results<\/strong>. The free version is limited to 25 results.<\/li>\n<li><strong>Individual and bulk deletion<\/strong> of results. Easily clean up your inspection dashboard from obsolete results you no longer need to reference. You can also select certain variables in bulk.<\/li>\n<\/ul>\n<p><a href=\"https:\/\/bowo.io\/vi-pro-scrsht-rdm\" rel=\"nofollow ugc\">Click here<\/a> to see a screenshot of the <a href=\"https:\/\/bowo.io\/vi-up-hstd-dsc\" rel=\"nofollow ugc\">PRO version<\/a> or see below in the screenshots section.<\/p>\n<h3>What PRO Users Say<\/h3>\n<p><em>&#8220;I was looking for a tool like this for a while. <strong>Great solution!<\/strong> Love this thing.&#8221;<\/em> ~Marco Frodl<\/p>\n<p><em>&#8220;I have used it for a couple of days and it has helped me a lot to <strong>go faster when debugging<\/strong>.&#8221;&#8221;<\/em> ~Javier Sor<\/p>\n<p><em>&#8220;I&#8217;ve only just started using it and it <strong>really helps me get my head around the code of a plugin<\/strong> I&#8217;m trying to customise&#8221;<\/em> ~Tim Dickinson<\/p>\n<p><em>&#8220;I&#8217;ve been testing it and I really like it. It <strong>helps a lot and saves a lot of time in development<\/strong>. It&#8217;s also compatible with Oxygen, Bricks, WPCodeBox, etc.&#8221;<\/em> ~Juan Jose Gonzalez, oxygenados.com<\/p>\n<p><em>&#8220;I just bought this! <strong>Great plugin<\/strong> &#8211; thank you for the hard work!&#8221;<\/em> ~Tim Dickinson<\/p>\n<p><em>&#8220;I used to use Ray locally, I&#8217;m also using Xdebug a lot .. if I need to debug some variables, I use Query Monitor. I bought this, because <strong>the UI is nice, it has all those good features from both worlds<\/strong>.&#8221;<\/em> ~Peter Morvay<\/p>\n<p><em>&#8220;Worth the buy! <strong>It is really good&#8230; great for debugging<\/strong>. Specially, when you want to write custom code or understand some snippet ChatGPT gave you.&#8221;<\/em> ~John D<\/p>\n<p><a href=\"https:\/\/bowo.io\/vi-up-hstd-dsc\" rel=\"nofollow ugc\">Get the PRO version now!<\/a><\/p>\n<h3>Check These Out Too<\/h3>\n<ul>\n<li><a href=\"https:\/\/wordpress.org\/plugins\/admin-site-enhancements\/\" rel=\"ugc\">Admin and Site Enhancements<\/a> helps you to easily enhance various admin workflows and site aspects while replacing multiple plugins doing it.<\/li>\n<li><a href=\"https:\/\/wordpress.org\/plugins\/system-dashboard\/\" rel=\"ugc\">System Dashboard<\/a>: Central dashboard to monitor various WordPress components, processes and data, including the server.<\/li>\n<li><a href=\"https:\/\/wordpress.org\/plugins\/debug-log-manager\/\" rel=\"ugc\">Debug Log Manager<\/a>: Log PHP, database and JavaScript errors via WP_DEBUG with one click. Conveniently create, view, filter and clear the debug.log file.<\/li>\n<li><a href=\"https:\/\/bowo.io\/vi-wpn-dsc\" rel=\"nofollow ugc\">WordPress Newsboard<\/a>: The latest news, articles, podcasts and videos from 100+ WordPress-focused sources.<\/li>\n<\/ul>\n",
    "download_link": "https:\/\/downloads.wordpress.org\/plugin\/variable-inspector.2.6.1.zip",
    "upgrade_notice": {
        "": "<p>None required yet.<\/p>"
    },
    "screenshots": {
        "1": {
            "src": "https:\/\/ps.w.org\/variable-inspector\/assets\/screenshot-1.png?rev=2896331",
            "caption": "The variable inspection dashboard"
        },
        "2": {
            "src": "https:\/\/ps.w.org\/variable-inspector\/assets\/screenshot-2.png?rev=2903221",
            "caption": "The PRO version"
        }
    },
    "tags": {
        "debug": "debug",
        "developer": "developer",
        "php-variables": "php variables",
        "variable-dump": "variable dump"
    },
    "stable_tag": "2.6.1",
    "versions": {
        "1.0.0": "https:\/\/downloads.wordpress.org\/plugin\/variable-inspector.1.0.0.zip",
        "1.1.0": "https:\/\/downloads.wordpress.org\/plugin\/variable-inspector.1.1.0.zip",
        "1.2.0": "https:\/\/downloads.wordpress.org\/plugin\/variable-inspector.1.2.0.zip",
        "1.3.1": "https:\/\/downloads.wordpress.org\/plugin\/variable-inspector.1.3.1.zip",
        "1.3.2": "https:\/\/downloads.wordpress.org\/plugin\/variable-inspector.1.3.2.zip",
        "1.4.0": "https:\/\/downloads.wordpress.org\/plugin\/variable-inspector.1.4.0.zip",
        "1.5.0": "https:\/\/downloads.wordpress.org\/plugin\/variable-inspector.1.5.0.zip",
        "1.6.0": "https:\/\/downloads.wordpress.org\/plugin\/variable-inspector.1.6.0.zip",
        "1.7.0": "https:\/\/downloads.wordpress.org\/plugin\/variable-inspector.1.7.0.zip",
        "1.7.1": "https:\/\/downloads.wordpress.org\/plugin\/variable-inspector.1.7.1.zip",
        "1.8.0": "https:\/\/downloads.wordpress.org\/plugin\/variable-inspector.1.8.0.zip",
        "1.9.0": "https:\/\/downloads.wordpress.org\/plugin\/variable-inspector.1.9.0.zip",
        "2.0.0": "https:\/\/downloads.wordpress.org\/plugin\/variable-inspector.2.0.0.zip",
        "2.1.0": "https:\/\/downloads.wordpress.org\/plugin\/variable-inspector.2.1.0.zip",
        "2.2.0": "https:\/\/downloads.wordpress.org\/plugin\/variable-inspector.2.2.0.zip",
        "2.2.1": "https:\/\/downloads.wordpress.org\/plugin\/variable-inspector.2.2.1.zip",
        "2.3.0": "https:\/\/downloads.wordpress.org\/plugin\/variable-inspector.2.3.0.zip",
        "2.4.0": "https:\/\/downloads.wordpress.org\/plugin\/variable-inspector.2.4.0.zip",
        "2.4.3": "https:\/\/downloads.wordpress.org\/plugin\/variable-inspector.2.4.3.zip",
        "2.4.3.1": "https:\/\/downloads.wordpress.org\/plugin\/variable-inspector.2.4.3.1.zip",
        "2.5.0": "https:\/\/downloads.wordpress.org\/plugin\/variable-inspector.2.5.0.zip",
        "2.5.1": "https:\/\/downloads.wordpress.org\/plugin\/variable-inspector.2.5.1.zip",
        "2.6.1": "https:\/\/downloads.wordpress.org\/plugin\/variable-inspector.2.6.1.zip",
        "trunk": "https:\/\/downloads.wordpress.org\/plugin\/variable-inspector.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "https:\/\/bowo.io\/vi-sp-rdm",
    "banners": {
        "low": "https:\/\/ps.w.org\/variable-inspector\/assets\/banner-772x250.png?rev=2709885",
        "high": false
    },
    "icons": {
        "1x": "https:\/\/ps.w.org\/variable-inspector\/assets\/icon-128x128.png?rev=2708895",
        "2x": "https:\/\/ps.w.org\/variable-inspector\/assets\/icon-256x256.png?rev=2708895"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 100,
    "blueprints": [],
    "preview_link": "",
    "language_packs": [
        {
            "type": "plugin",
            "slug": "variable-inspector",
            "language": "nl_NL",
            "version": "2.6.1",
            "updated": "2024-03-18 08:12:14",
            "package": "https:\/\/downloads.wordpress.org\/translation\/plugin\/variable-inspector\/2.6.1\/nl_NL.zip"
        }
    ]
}