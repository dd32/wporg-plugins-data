{
    "name": "WPGraphQL",
    "slug": "wp-graphql",
    "version": "1.23.0",
    "author": "<a href=\"http:\/\/www.wpgraphql.com\">WPGraphQL<\/a>",
    "author_profile": "https:\/\/profiles.wordpress.org\/jasonbahl\/",
    "contributors": {
        "jasonbahl": {
            "profile": "https:\/\/profiles.wordpress.org\/jasonbahl\/",
            "avatar": "https:\/\/secure.gravatar.com\/avatar\/94bf4ea789246f76c48bcf8509bcf01e?s=96&d=monsterid&r=g",
            "display_name": "Jason Bahl"
        },
        "tylerbarnes1": {
            "profile": "https:\/\/profiles.wordpress.org\/tylerbarnes1\/",
            "avatar": "https:\/\/secure.gravatar.com\/avatar\/0a5bd2d18281009a03f01b8378abada1?s=96&d=monsterid&r=g",
            "display_name": "Tyler"
        },
        "ryankanner": {
            "profile": "https:\/\/profiles.wordpress.org\/ryankanner\/",
            "avatar": "https:\/\/secure.gravatar.com\/avatar\/05ac60376cc36cb6a62e2fb36ee6ac8f?s=96&d=monsterid&r=g",
            "display_name": "Ryan Kanner"
        },
        "chopinbach": {
            "profile": "https:\/\/profiles.wordpress.org\/chopinbach\/",
            "avatar": "https:\/\/secure.gravatar.com\/avatar\/bc11b699a2e59027c7c8ce4e90dfc4a1?s=96&d=monsterid&r=g",
            "display_name": "Edwin Cromley"
        },
        "kidunot89": {
            "profile": "https:\/\/profiles.wordpress.org\/kidunot89\/",
            "avatar": "https:\/\/secure.gravatar.com\/avatar\/ce1578d39d3340362b17a6c64bafcaed?s=96&d=monsterid&r=g",
            "display_name": "Geoff Taylor"
        },
        "justlevine": {
            "profile": "https:\/\/profiles.wordpress.org\/justlevine\/",
            "avatar": "https:\/\/secure.gravatar.com\/avatar\/f35144185dd51ae8ea3449bfdf10112b?s=96&d=monsterid&r=g",
            "display_name": "David Levine"
        }
    },
    "requires": "5.0",
    "tested": "6.5.2",
    "requires_php": "7.1",
    "requires_plugins": [],
    "compatibility": [],
    "rating": 98,
    "ratings": {
        "5": 45,
        "4": 1,
        "3": 1,
        "2": 0,
        "1": 0
    },
    "num_ratings": 47,
    "support_url": "https:\/\/wordpress.org\/support\/plugin\/wp-graphql\/",
    "support_threads": 3,
    "support_threads_resolved": 3,
    "active_installs": 30000,
    "downloaded": 830974,
    "last_updated": "2024-04-10 3:29am GMT",
    "added": "2020-11-14",
    "homepage": "https:\/\/github.com\/wp-graphql\/wp-graphql",
    "sections": {
        "description": "<p>WPGraphQL is a free, open-source WordPress plugin that provides an extendable GraphQL schema and API for any WordPress site.<\/p>\n<p>Below are some links to help you get started with WPGraphQL<\/p>\n<ul>\n<li><a href=\"https:\/\/www.wpgraphql.com\" rel=\"nofollow ugc\">WPGraphQL.com<\/a><\/li>\n<li><a href=\"https:\/\/wpgraphql.com\/docs\/quick-start\" rel=\"nofollow ugc\">Quick Start Guide<\/a><\/li>\n<li><a href=\"https:\/\/wpgraphql.com\/docs\/intro-to-graphql\" rel=\"nofollow ugc\">Intro to GraphQL<\/a><\/li>\n<li><a href=\"https:\/\/wpgraphql.com\/docs\/intro-to-wordpress\" rel=\"nofollow ugc\">Intro to WordPress<\/a><\/li>\n<li><a href=\"https:\/\/join.slack.com\/t\/wp-graphql\/shared_invite\/zt-3vloo60z-PpJV2PFIwEathWDOxCTTLA\" rel=\"nofollow ugc\">Join the WPGraphQL community on Slack<\/a><\/li>\n<\/ul>\n<h4>Build rich JavaScript applications with WordPress and GraphQL<\/h4>\n<p>WPGraphQL allows you to separate your CMS from your presentation layer. Content creators can use the CMS they know, while developers can use the frameworks and tools they love.<\/p>\n<p>WPGraphQL works great with:<\/p>\n<ul>\n<li><a href=\"https:\/\/gatsbyjs.com\" rel=\"nofollow ugc\">Gatsby<\/a><\/li>\n<li><a href=\"https:\/\/www.apollographql.com\/docs\/react\/\" rel=\"nofollow ugc\">Apollo Client<\/a><\/li>\n<li><a href=\"https:\/\/nextjs.org\/\" rel=\"nofollow ugc\">NextJS<\/a><\/li>\n<li>&#8230;and more<\/li>\n<\/ul>\n<h4>Query what you need. Get exactly that.<\/h4>\n<p>With GraphQL, the client makes declarative queries, asking for the exact data needed, and in exactly what was asked for is given in response, nothing more. This allows the client have control over their application, and allows the GraphQL server to perform more efficiently by only fetching the resources requested.<\/p>\n<h4>Fetch many resources in a single request.<\/h4>\n<p>GraphQL queries allow access to multiple root resources, and also smoothly follow references between connected resources. While typical a REST API would require round-trip requests to many endpoints, GraphQL APIs can get all the data your app needs in a single request. Apps using GraphQL can be quick even on slow mobile network connections.<\/p>\n<h4>Powerful Debugging Tools<\/h4>\n<p>WPGraphQL ships with GraphiQL in your WordPress dashboard, allowing you to browse your site&#8217;s GraphQL Schema and test Queries and Mutations.<\/p>\n<h4>Upgrading<\/h4>\n<p>It is recommended that anytime you want to update WPGraphQL that you get familiar with what&#8217;s changed in the release.<\/p>\n<p>WPGraphQL publishes <a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/releases\" rel=\"nofollow ugc\">release notes on Github<\/a>.<\/p>\n<p>WPGraphQL has been following Semver practices for a few years. We will continue to follow Semver and let version numbers communicate meaning. The summary of Semver versioning is as follows:<\/p>\n<ul>\n<li><em>MAJOR<\/em> version when you make incompatible API changes,<\/li>\n<li><em>MINOR<\/em> version when you add functionality in a backwards compatible manner, and<\/li>\n<li><em>PATCH<\/em> version when you make backwards compatible bug fixes.<\/li>\n<\/ul>\n<p>You can read more about the details of Semver at semver.org<\/p>\n<h3>Privacy Policy<\/h3>\n<p>WPGraphQL uses <a href=\"https:\/\/appsero.com\" rel=\"nofollow ugc\">Appsero<\/a> SDK to collect some telemetry data upon user&#8217;s confirmation. This helps us to troubleshoot problems faster &amp; make product improvements.<\/p>\n<p>Appsero SDK <strong>does not gather any data by default.<\/strong> The SDK only starts gathering basic telemetry data <strong>when a user allows it via the admin notice<\/strong>. We collect the data to ensure a great user experience for all our users.<\/p>\n<p>Integrating Appsero SDK <strong>DOES NOT IMMEDIATELY<\/strong> start gathering data, <strong>without confirmation from users in any case.<\/strong><\/p>\n<p>Learn more about how <a href=\"https:\/\/appsero.com\/privacy-policy\/\" rel=\"nofollow ugc\">Appsero collects and uses this data<\/a>.<\/p>\n",
        "faq": "\n<dt id='can%20i%20use%20wpgraphql%20with%20xx%20javascript%20framework%3F'>\nCan I use WPGraphQL with xx JavaScript Framework?\n<\/h4>\n<p>\n<p>WPGraphQL turns your WordPress site into a GraphQL API. Any client that can make http requests to the GraphQL endpoint can be used to interact with WPGraphQL.<\/p>\n<\/p>\n<dt id='where%20do%20i%20get%20wpgraphql%20swag%3F'>\nWhere do I get WPGraphQL Swag?\n<\/h4>\n<p>\n<p>WPGraphQL Swag is available on the Gatsby Swag store.<\/p>\n<\/p>\n<dt id='what%27s%20the%20relationship%20between%20gatsby%2C%20wp%20engine%2C%20and%20wpgraphql%3F'>\nWhat&#8217;s the relationship between Gatsby, WP Engine, and WPGraphQL?\n<\/h4>\n<p>\n<p><a href=\"https:\/\/wpengine.com\/\" rel=\"nofollow ugc\">WP Engine<\/a> is the employer of Jason Bahl, the creator and maintainer of WPGraphQL. He was previously employed by <a href=\"https:\/\/gatsbyjs.com\" rel=\"nofollow ugc\">Gatsby<\/a>.<\/p>\n<p>You can read more about this <a href=\"https:\/\/www.wpgraphql.com\/2021\/02\/07\/whats-next-for-wpgraphql\/\" rel=\"nofollow ugc\">here<\/a>.<\/p>\n<p>Gatsby and WP Engine both believe that a strong GraphQL API for WordPress is a benefit for the web. Neither Gatsby or WP Engine are required to be used with WPGraphQL, however it&#8217;s important to acknowledge and understand what&#8217;s possible because of their investments into WPGraphQL and the future of headless WordPress!<\/p>\n<\/p>\n\n",
        "changelog": "<h4>1.23.0<\/h4>\n<p><strong>New Features<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/3073\" rel=\"nofollow ugc\">#3073<\/a>: feat: expose <code>hasPassword<\/code> and <code>password<\/code> fields on Post objects. Thanks @justlevine!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/3091\" rel=\"nofollow ugc\">#3091<\/a>: feat: introduce actions and filters for GraphQL Admin Notices<\/li>\n<\/ul>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/3079\" rel=\"nofollow ugc\">#3079<\/a>: fix: GraphiQL IDE test failures<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/3084\" rel=\"nofollow ugc\">#3084<\/a>: perf: refactor PluginConnectionResolver to only fetch plugins once. Thanks @justlevine!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/3092\" rel=\"nofollow ugc\">#3092<\/a>: ci: test against wp 6.5<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/3093\" rel=\"nofollow ugc\">#3093<\/a>: ci: Update actions in GitHub workflows and cleanup. Thanks @justlevine!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/3093\" rel=\"nofollow ugc\">#3093<\/a>: chore: update Composer dev-deps and lint. Thanks @justlevine!<\/li>\n<\/ul>\n<h4>1.22.1<\/h4>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/3067\" rel=\"nofollow ugc\">#3067<\/a>: fix: respect show avatar setting<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/3063\" rel=\"nofollow ugc\">#3063<\/a>: fix: fixes a bug in cursor stability filters that could lead to empty order<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/3070\" rel=\"nofollow ugc\">#3070<\/a>: test(3063): Adds test for <a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/3063\" rel=\"nofollow ugc\">#3063<\/a><\/li>\n<\/ul>\n<h4>1.22.0<\/h4>\n<p><strong>New Features<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/3044\" rel=\"nofollow ugc\">#3044<\/a>: feat: add <code>graphql_pre_resolve_menu_item_connected_node<\/code> filter<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/3043\" rel=\"nofollow ugc\">#3039<\/a>: feat: add <code>UniformResourceIdentifiable<\/code> interface to <code>Comment<\/code> type<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/3020\" rel=\"nofollow ugc\">#3020<\/a>: feat: introduce <code>graphql_query_analyzer_get_headers<\/code> filter<\/li>\n<\/ul>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/3062\" rel=\"nofollow ugc\">#3062<\/a>: ci: pin wp-browser to &#8220;&lt;3.5&#8221; to allow automated tests to run properly<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/3057\" rel=\"nofollow ugc\">#3057<\/a>: fix: <code>admin_enqueue_scripts<\/code> callback should expect a possible <code>null<\/code> value passed to it<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/3048\" rel=\"nofollow ugc\">#3048<\/a>: fix: <code>isPostsPage<\/code> on content type<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/3043\" rel=\"nofollow ugc\">#3043<\/a>: fix: return empty when filtering <code>menuItems<\/code> by a location with no assigned items<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/3045\" rel=\"nofollow ugc\">#3045<\/a>: fix: <code>UsersConnectionSearchColumnEnum<\/code> values should be prefixed with <code>user_<\/code><\/li>\n<\/ul>\n<p><h4>1.21.0<\/h4>\n<\/p>\n<p><strong>New Features<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/3035\" rel=\"nofollow ugc\">#3035<\/a>: feat: provide better error when field references a type that does not exist<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/3027\" rel=\"nofollow ugc\">#3027<\/a>: feat: Add register_graphql_admin_notice API and intial use to inform users of the new WPGraphQL for ACF plugin<\/li>\n<\/ul>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/3038\" rel=\"nofollow ugc\">#3038<\/a>: chore(deps-dev): bump the composer group across 1 directories with 1 update. Thanks @dependabot!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/3033\" rel=\"nofollow ugc\">#3033<\/a>: fix: php deprecation error for dynamic properties on AppContext class<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/3031\" rel=\"nofollow ugc\">#3031<\/a>: fix(graphiql): Allow GraphiQL to run even if a valid schema cannot be returned. Thanks @linucks!<\/li>\n<\/ul>\n<p><h4>1.20.0<\/h4>\n<\/p>\n<p><strong>New Features<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/3013\" rel=\"nofollow ugc\">#3013<\/a>: feat: output GRAPHQL_DEBUG message if requested amount is larger than connection limit. Thanks @justlevine!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/3008\" rel=\"nofollow ugc\">#3008<\/a>: perf: Expose graphql_should_analyze_queries as setting. Thanks @justlevine!<\/li>\n<\/ul>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/3022\" rel=\"nofollow ugc\">#3022<\/a>: chore: add @justlevine to list of contributors! \ud83d\ude4c \ud83e\udd73<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/3011\" rel=\"nofollow ugc\">#3011<\/a>: chore: update composer dev-dependencies and use php-compatibility:develop branch to 8.0+ lints. Thanks @justlevine!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/3010\" rel=\"nofollow ugc\">#3010<\/a>: chore: implement stricter PHPDoc types. Thanks @justlevine!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/3009\" rel=\"nofollow ugc\">#3009<\/a>: chore: implement stricter PHPStan config and clean up unnecessary type-guards. Thanks @justlevine!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/3007\" rel=\"nofollow ugc\">#3007<\/a>: fix: call html_entity_decode() with explicit flags and decode single-quotes. Thanks @justlevine!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/3006\" rel=\"nofollow ugc\">#3006<\/a>: fix: replace deprecated AbstractConnectionResolver::setQueryArg() call with ::set_query_arg(). Thanks @justlevine!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/3004\" rel=\"nofollow ugc\">#3004<\/a>: docs: Update using-data-from-custom-database-tables.md<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2998\" rel=\"nofollow ugc\">#2998<\/a>: docs: Update build-your-first-wpgraphql-extension.md. Thanks @Jacob-Daniel!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2997\" rel=\"nofollow ugc\">#2997<\/a>: docs: update wpgraphql-concepts.md. Thanks @Jacob-Daniel!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2996\" rel=\"nofollow ugc\">#2996<\/a>: fix: Field id duplicates uri field description. Thanks @marcinkrzeminski!<\/li>\n<\/ul>\n<p><h4>1.19.0<\/h4>\n<\/p>\n<p><strong>New Features<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2988\" rel=\"nofollow ugc\">#2988<\/a>: feat: add missing extra fields to <code>EnqueuedAsset<\/code>, <code>EnqueuedScript<\/code> and <code>EnqueuedStylesheet<\/code><\/li>\n<\/ul>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2989\" rel=\"nofollow ugc\">#2989<\/a>: fix: make User.url public<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2990\" rel=\"nofollow ugc\">#2990<\/a>: chore: autolint tests with phpcbf<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2992\" rel=\"nofollow ugc\">#2992<\/a>: fix: add polyfills for <code>str_starts_with()<\/code> and <code>str_ends_with()<\/code> to prevent fatal errors in <code>PHP &lt; 8.0<\/code><\/li>\n<\/ul>\n<p><h4>1.18.2<\/h4>\n<\/p>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li>ci: update tests to run against WordPress 6.4.1. Update Docker Deploy to include WP 6.4.1. Update README, plugin file&#8217;s &#8220;tested up to&#8221; to reflect.<\/li>\n<\/ul>\n<p><h4>1.18.1<\/h4>\n<\/p>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2984\" rel=\"nofollow ugc\">#2984<\/a>: ci: update tests to run against WordPress 6.4. Update README, plugin file&#8217;s &#8220;tested up to&#8221; to reflect.<\/li>\n<\/ul>\n<p><h4>1.18.0<\/h4>\n<\/p>\n<p><strong>New Features<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2937\" rel=\"nofollow ugc\">#2937<\/a>: fix: Support asPreview by URI\/SLUG Id Type (this is technically a bugfix, but introduces new functionality)<\/li>\n<\/ul>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2972\" rel=\"nofollow ugc\">#2972<\/a>: chore(deps): bump @babel\/traverse from 7.17.3 to 7.23.2<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2930\" rel=\"nofollow ugc\">#2930<\/a>: fix: unstable term cursor identical names<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2976\" rel=\"nofollow ugc\">#2976<\/a>: chore: restore commenting sniffs to PHPCS ruleset<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2973\" rel=\"nofollow ugc\">#2973<\/a>: chore: update composer deps to latest<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2975\" rel=\"nofollow ugc\">#2975<\/a>: chore: lint and remove useless variables [phpcs]<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2977\" rel=\"nofollow ugc\">#2977<\/a>: chore: sort use statements alphabetically with SlevomatCodingStandard.Namespaces.AlphabeticallySortedUses (autofix)<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2978]\" rel=\"nofollow ugc\">#2978<\/a>: chore: implement stricter type hinting with SlevomatCodingStandard.TypeHints [phpcs]<\/li>\n<\/ul>\n<p><h4>1.17.0<\/h4>\n<\/p>\n<p><strong>New Features<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2940\" rel=\"nofollow ugc\">#2940<\/a>: feat: add graphql_format_name() access method<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2256\" rel=\"nofollow ugc\">#2256<\/a>: feat: add connectedTerms connection to Taxonomy Object<\/li>\n<\/ul>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2808\" rel=\"nofollow ugc\">#2808<\/a>: fix: fallback to template filename if sanitized name is empty<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2968\" rel=\"nofollow ugc\">#2968<\/a>: fix: Add graphql_debug warning when using <code>hasPublishedPosts: ATTACHMENT<\/code><\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2968\" rel=\"nofollow ugc\">#2968<\/a>: fix: improve DX for updateComment mutation<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2962\" rel=\"nofollow ugc\">#2962<\/a>: fix: respect hasPublishedPosts where arg on unauthenticated users queries<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2967\" rel=\"nofollow ugc\">#2967<\/a>: fix: use all roles for UserRoleEnum instead of the filtered editible_roles<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2940\" rel=\"nofollow ugc\">#2940<\/a>: fix: Decode slug so it works with other languages<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2959\" rel=\"nofollow ugc\">#2959<\/a>: chore: remove @phpstan-ignore annotations<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2945\" rel=\"nofollow ugc\">#2945<\/a>: fix: rename fields registered by connections when using <code>rename_graphql_field()<\/code><\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2949\" rel=\"nofollow ugc\">#2949<\/a>: fix: correctly get default user role for settings selectbox<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2955\" rel=\"nofollow ugc\">#2955<\/a>: test: back-fill register_graphql_input|union_type() tests<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2953\" rel=\"nofollow ugc\">#2953<\/a>: fix: term uri, early return. (Follow up to <a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2341\" rel=\"nofollow ugc\">#2341<\/a>)<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2956\" rel=\"nofollow ugc\">#2956<\/a>: chore(deps-dev): bump postcss from 8.4.12 to 8.4.31<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2954\" rel=\"nofollow ugc\">#2954<\/a>: fix: regression to autoloader for bedrock sites. (Follow-up to <a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2935\" rel=\"nofollow ugc\">#2935<\/a>)<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2950\" rel=\"nofollow ugc\">#2950<\/a>: fix: rename typo in component name &#8211; AuthSwitchProvider<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2948\" rel=\"nofollow ugc\">#2948<\/a>: chore: fix spelling mistakes (non-logical)<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2944\" rel=\"nofollow ugc\">#2944<\/a>: fix: skip setting if no $setting[&#8216;group&#8217;]<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2934\" rel=\"nofollow ugc\">#2934<\/a>: chore(deps-dev): bump composer\/composer from 2.2.21 to 2.2.22<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2936\" rel=\"nofollow ugc\">#2936<\/a>: chore(deps): bump graphql from 16.5.0 to 16.8.1<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2341\" rel=\"nofollow ugc\">#2341<\/a>: fix: wrong term URI on sub-sites of multisite subdomain installs<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2935\" rel=\"nofollow ugc\">#2935<\/a>: fix: admin notice wasn&#8217;t displaying if composer dependencies were missing<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2933\" rel=\"nofollow ugc\">#2933<\/a>: chore: remove unused parameters from resolver callbacks<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2932\" rel=\"nofollow ugc\">#2932<\/a>: chore: cleanup PHPCS inline annotations<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2634\" rel=\"nofollow ugc\">#2934<\/a>: chore: use .php extension for stub files<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2924\" rel=\"nofollow ugc\">#2924<\/a>: chore: upgrade WPCS to v3.0<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2921\" rel=\"nofollow ugc\">#2921<\/a>: fix: zip artifact in GitHub not in sub folder<\/li>\n<\/ul>\n<p><h4>1.16.0<\/h4>\n<\/p>\n<p><strong>New Features<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2918\" rel=\"nofollow ugc\">#2918<\/a>: feat: Use graphql endpoint without scheme in url header.<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2882\" rel=\"nofollow ugc\">#2882<\/a>: feat: Config and Cursor Classes refactor<\/li>\n<\/ul>\n<p><h4>1.15.0<\/h4>\n<\/p>\n<p><strong>New Features<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2908\" rel=\"nofollow ugc\">#2908<\/a>: feat: Skip param added to Utils::map_input(). Thanks @kidunot89!<\/li>\n<\/ul>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2907\" rel=\"nofollow ugc\">#2907<\/a>: ci: Use WP 6.3 image, not the beta one<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2902\" rel=\"nofollow ugc\">#2902<\/a>: chore: handle unused variables (phpcs). Thanks @justlevine!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2901\" rel=\"nofollow ugc\">#2901<\/a>: chore: remove useless ternaries (phpcs). Thanks @justlevine!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2898\" rel=\"nofollow ugc\">#2898<\/a>: chore: restore excluded PHPCS sniffs. Thanks @justlevine!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2899\" rel=\"nofollow ugc\">#2899<\/a>: chore: Configure PHPCS blank line check and autofix. Thanks @justlevine!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2900\" rel=\"nofollow ugc\">#2900<\/a>: chore: implement PHPCS sniffs from Slevomat Coding Standards. Thanks @justlevine!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2897\" rel=\"nofollow ugc\">#2897<\/a>: fix: default excerptRendered to empty string. Thanks @izzygld!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2890\" rel=\"nofollow ugc\">#2890<\/a>: fix: Use hostname for graphql cache header url for varnish<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2889\" rel=\"nofollow ugc\">#2892<\/a>: chore: GitHub template tweaks. Thanks @justlevine!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2889\" rel=\"nofollow ugc\">#2889<\/a>: ci: update tests to test against WordPress 6.3, simplify the matrix<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2891\" rel=\"nofollow ugc\">#2891<\/a>: chore: bump graphql-php to 14.11.10 and update Composer dev-deps. Thanks @justlevine!<\/li>\n<\/ul>\n<p><h4>1.14.10<\/h4>\n<\/p>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2874\" rel=\"nofollow ugc\">#2874<\/a>: fix: improve PostObjectCursor support for meta queries. Thanks @kidunot89!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2880\" rel=\"nofollow ugc\">#2880<\/a>: fix: increase clarity of the description of &#8220;asPreview&#8221; argument<\/li>\n<\/ul>\n<p><h4>1.14.9<\/h4>\n<\/p>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2865\" rel=\"nofollow ugc\">#2865<\/a>: fix: user roles should return empty if user doesn&#8217;t have roles. Thanks @j3ang!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2870\" rel=\"nofollow ugc\">#2870<\/a>: fix: Type Loader returns null when &#8220;graphql_single_name&#8221; value has underscores [regression]<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2871\" rel=\"nofollow ugc\">#2871<\/a>: fix: update tests, follow-up to <a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2865\" rel=\"nofollow ugc\">#2865<\/a><\/li>\n<\/ul>\n<p><h4>1.14.8<\/h4>\n<\/p>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2855\" rel=\"nofollow ugc\">#2855<\/a>: perf: enforce static closures when possible (PHPCS). Thanks @justlevine!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2857\" rel=\"nofollow ugc\">#2857<\/a>: fix: Prevent truncation of query name inside the GraphiQL Query composer explorer tab. Thanks @LarsEjaas!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2856\" rel=\"nofollow ugc\">#2856<\/a>: chore: add missing translator comments. Thanks @justlevine!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2862\" rel=\"nofollow ugc\">#2862<\/a>: chore(deps-dev): bump word-wrap from 1.2.3 to 1.2.4<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2861\" rel=\"nofollow ugc\">#2861<\/a>: fix: output <code>list:$type<\/code> keys for Root fields that return a list of nodes<\/li>\n<\/ul>\n<p><h4>1.14.7<\/h4>\n<\/p>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2853\" rel=\"nofollow ugc\">#2853<\/a>: fix: internal server error when query max depth setting is left empty<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2851\" rel=\"nofollow ugc\">#2851<\/a>: fix: querying posts by slug or uri with non-ascii characters<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2849\" rel=\"nofollow ugc\">#2849<\/a>: ci: Indent WP 6.2 in workflow file. Fixes Docker deploys. Thanks @markkelnar!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2846\" rel=\"nofollow ugc\">#2846<\/a>: chore(deps): bump tough-cookie from 4.0.0 to 4.1.3<\/li>\n<\/ul>\n<p><h4>1.14.6<\/h4>\n<\/p>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2841\" rel=\"nofollow ugc\">#2841<\/a>: ci: support STEP_DEBUG in Code Quality workflow. Thanks @justlevine!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2840\" rel=\"nofollow ugc\">#2840<\/a>: fix: update createMediaItem mutation to have better validation of input.<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2838\" rel=\"nofollow ugc\">#2838<\/a>: chore: update security.md<\/li>\n<\/ul>\n<p><h4>1.14.5<\/h4>\n<\/p>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2834\" rel=\"nofollow ugc\">#2834<\/a>: fix: improve how the Query Analyzer tracks list types, only tracking lists from the RootType and not nested lists.<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2828\" rel=\"nofollow ugc\">#2828<\/a>: chore: update composer dev-deps to latest. Thanks @justlevine!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2835\" rel=\"nofollow ugc\">#2835<\/a>: ci: update docker deploy workflow to use latest docker actions.<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2836\" rel=\"nofollow ugc\">#2836<\/a>: ci: update schema upload workflow to pin mariadb to 10.8.2<\/li>\n<\/ul>\n<p><h4>1.14.4<\/h4>\n<\/p>\n<p><strong>New Features<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2826\" rel=\"nofollow ugc\">#2826<\/a>: feat: pass connection config to connection field<\/li>\n<\/ul>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2818\" rel=\"nofollow ugc\">#2818<\/a>: chore: update webonyx\/graphql-php to v14.11.9. Thanks @justlevine!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2813\" rel=\"nofollow ugc\">#2813<\/a>: fix: replace double negation with true. Thanks @cesarkohl!<\/li>\n<\/ul>\n<p><h4>1.14.3<\/h4>\n<\/p>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2801\" rel=\"nofollow ugc\">#2801<\/a>: fix: conflict between custom post type and media slugs<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2794\" rel=\"nofollow ugc\">#2799<\/a>: fix: querying posts by slug fails when custom permalinks are set<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2794\" rel=\"nofollow ugc\">#2794<\/a>: chore(deps): bump guzzlehttp\/psr7 from 1.9.0 to 1.9.1<\/li>\n<\/ul>\n<p><h4>1.14.2<\/h4>\n<\/p>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2792\" rel=\"nofollow ugc\">#2792<\/a>: fix: uri field is null when querying the page for posts uri<\/li>\n<\/ul>\n<p><h4>1.14.1<\/h4>\n<\/p>\n<p><strong>New Features<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2763\" rel=\"nofollow ugc\">#2763<\/a>: feat: add <code>shouldShowAdminToolbar<\/code> field to the User type, resolving from the &#8220;show_admin_bar_front&#8221; meta value. Thanks @blakewilson!<\/li>\n<\/ul>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2758\" rel=\"nofollow ugc\">#2758<\/a>: fix: Allow post types and taxonomies to be registered without &#8220;graphql_plural_name&#8221;.<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2762\" rel=\"nofollow ugc\">#2762<\/a>: Bump webpack version.<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2770\" rel=\"nofollow ugc\">#2770<\/a>: fix: wrong order in term\/post ancestor queries. Thanks @creative-andrew!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2775\" rel=\"nofollow ugc\">#2775<\/a>: fix: properly resolve when querying terms filtered by multiple taxonomies. Thanks @thecodeassassin!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2776\" rel=\"nofollow ugc\">#2776<\/a>: chore: remove internal usage of deprecated functions. Thanks @justlevine!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2777\" rel=\"nofollow ugc\">#2777<\/a>: chore: update composer dev-deps (not PHPStan). Thanks @justlevine!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2778\" rel=\"nofollow ugc\">#2778<\/a>: fix: Update PHPStan and fix smells. Thanks @justlevine!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2779\" rel=\"nofollow ugc\">#2779<\/a>: ci: test against WordPress 6.2. Thanks @justlevine!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2781\" rel=\"nofollow ugc\">#2781<\/a>: chore: call _doing_it_wrong() when using deprecated PostObjectUnion and TermObjectUnion. Thanks @justlevine!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2782\" rel=\"nofollow ugc\">#2782<\/a>: ci: fix deprecation warnings in Github workflows. Thanks @justlevine!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2786\" rel=\"nofollow ugc\">#2786<\/a>: fix: early return for HTTP OPTIONS requests.<\/li>\n<\/ul>\n<p><h4>1.14.0<\/h4>\n<\/p>\n<p><strong>New Features<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2745\" rel=\"nofollow ugc\">#2745<\/a>: feat: Allow fields, connections and mutations to optionally be registered with undersores in the field name.<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2651\" rel=\"nofollow ugc\">#2651<\/a>: feat: Add <code>deregister_graphql_mutation()<\/code> and <code>graphql_excluded_mutations<\/code> filter. Thanks @justlevine!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2652\" rel=\"nofollow ugc\">#2652<\/a>: feat: Add <code>deregister_graphql_connection<\/code> and <code>graphql_excluded_connections<\/code> filter. Thanks @justlevine!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2680\" rel=\"nofollow ugc\">#2680<\/a>: feat: Refactor the NodeResolver::resolve_uri to use WP_Query. Thanks @justlevine!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2643\" rel=\"nofollow ugc\">#2643<\/a>: feat: Add post_lock check on edit\/delete mutation. Thanks @markkelnar!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2649\" rel=\"nofollow ugc\">#2649<\/a>: feat: Add <code>pageInfo<\/code> field to the Connection type.<\/li>\n<\/ul>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2752\" rel=\"nofollow ugc\">#2752<\/a>: fix: handle 404s in NodeResolver.php. Thanks @justlevine!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2735\" rel=\"nofollow ugc\">#2735<\/a>: fix: Explicitly check for DEBUG enabled value for tests. Thanks @markkelnar!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2659\" rel=\"nofollow ugc\">#2659<\/a>: test: Add tests for nodeByUri. Thanks @justlevine!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2724\" rel=\"nofollow ugc\">#2724<\/a>: test: Add test for graphql:Query key in headers. Thanks @markkelnar!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2718\" rel=\"nofollow ugc\">#2718<\/a>: fix: deprecation notice. Thanks @decodekult!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2705\" rel=\"nofollow ugc\">#2705<\/a>: chore: Use fully qualified classnames in PHPDoc annotations. Thanks @justlevine!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2706\" rel=\"nofollow ugc\">#2706<\/a>: chore: update PHPStan and fix newly surfaced sniffs. Thanks @justlevine!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2698\" rel=\"nofollow ugc\">#2698<\/a>: chore: bump simple-get from 3.15.1 to 3.16.0. Thanks @dependabot!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2701\" rel=\"nofollow ugc\">#2701<\/a>: fix: navigation url. Thanks @jiwon-mun!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2704\" rel=\"nofollow ugc\">#2704<\/a>: fix: missing apostrophe after escape. Thanks @i-mann!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2709\" rel=\"nofollow ugc\">#2709<\/a>: chore: update http-cache-semantics. Thanks @dependabot!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2707\" rel=\"nofollow ugc\">#2707<\/a>: ci: update and fix Lint PR workflow. Thanks @justlevine!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2689\" rel=\"nofollow ugc\">#2689<\/a>: fix: prevent infinite recursion for interfaces that implement themselves as an interface.<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2691\" rel=\"nofollow ugc\">#2691<\/a>: fix: prevent non-node types from being output in the query analyzer lis-type<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2684\" rel=\"nofollow ugc\">#2684<\/a>: chore: remove deprecated use of WPGraphQL\\Data\\DataSource::resolve_user(). Thanks @renatonascalves<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2675\" rel=\"nofollow ugc\">#2675<\/a>: ci: keep the develop branch in sync with master.<\/li>\n<\/ul>\n<p><h4>1.13.10<\/h4>\n<\/p>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2741\" rel=\"nofollow ugc\">#2741<\/a>: Change the plugin name from &#8220;WP GraphQL&#8221; to &#8220;WPGraphQL&#8221;. Thanks @josephfusco!<\/li>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2742\" rel=\"nofollow ugc\">#2742<\/a>: Update Stalebot rules. Thanks @justlevine!<\/li>\n<\/ul>\n<p><h4>1.13.9<\/h4>\n<\/p>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2726\" rel=\"nofollow ugc\">#2726<\/a>: fix: invalid schema when custom post types and custom taxonomies are registered with underscores in the &#8220;graphql_single_name&#8221; \/ &#8220;graphql_plural_name&#8221;<\/li>\n<\/ul>\n<p><h4>1.13.8<\/h4>\n<\/p>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2712\" rel=\"nofollow ugc\">#2712<\/a>: fix: query analyzer outputting unexpected list types<\/li>\n<\/ul>\n<p><h4>1.13.7<\/h4>\n<\/p>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2661\" rel=\"nofollow ugc\">#2661<\/a>): chore(deps): bump simple-git from 3.10.0 to 3.15.1<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2665\" rel=\"nofollow ugc\">#2665<\/a>): chore(deps): bump decode-uri-component from 0.2.0 to 0.2.2<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2668\" rel=\"nofollow ugc\">#2668<\/a>): test: Multiple domain tests. Thanks @markkelnar!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2669\" rel=\"nofollow ugc\">#2669<\/a>): ci: Use last working version of xdebug for php7. Thanks @markkelnar!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2671\" rel=\"nofollow ugc\">#2671<\/a>): fix: correct regressions to field formatting forcing snake_case and UcFirst fields to be lcfirst\/camelCase<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2672\" rel=\"nofollow ugc\">#2672<\/a>): chore: update lint-pr workflow<\/li>\n<\/ul>\n<p><h4>1.13.6<\/h4>\n<\/p>\n<p><strong>New Feature<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2657\" rel=\"nofollow ugc\">#2657<\/a>): feat: pass unfiltered args through to filters in the ConnectionResolver classes. Thanks @kidunot89!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2655\" rel=\"nofollow ugc\">#2655<\/a>): feat: add <code>includeDefaultInterfaces<\/code> to connection config, allowing connections to be registered without the default <code>Connection<\/code> and <code>Edge<\/code> interfaces applied.. Thanks @justlevine!<\/li>\n<\/ul>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2656\" rel=\"nofollow ugc\">#2656<\/a>): chore: clean up NodeResolver::resolve_uri() logic. Thanks @justlevine!<\/li>\n<\/ul>\n<p><h4>1.13.5<\/h4>\n<\/p>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2647\" rel=\"nofollow ugc\">#2647<\/a>): fix: properly register the node field on ConnectionEdge interfaces<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2645\" rel=\"nofollow ugc\">#2645<\/a>): fix: regression where fields of an object type were forced to be camelCase. This allows snake_case fields again.<\/li>\n<\/ul>\n<p><h4>1.13.4<\/h4>\n<\/p>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2631\" rel=\"nofollow ugc\">#2631<\/a>): simplify (DRY up) connection interface registration.<\/li>\n<\/ul>\n<p><h4>1.13.3<\/h4>\n<\/p>\n<ul>\n<li>fix: update versions for WordPress.org deploys<\/li>\n<\/ul>\n<p><h4>1.13.2<\/h4>\n<\/p>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2627\" rel=\"nofollow ugc\">#2627<\/a>): fix: Fixes regression where Connection classes were moved to another namespace. This adds deprecated classes back to the old namespace to extend the new classes. Thanks @justlevine!<\/li>\n<\/ul>\n<p><h4>1.13.1<\/h4>\n<\/p>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2625\" rel=\"nofollow ugc\">#2625<\/a>): fix: Fixes a regression to v1.13.0 where mutations registered with an uppercase first letter weren&#8217;t properly being transformed to a lowercase first letter when the field is added to the Schema.<\/li>\n<\/ul>\n<p><h4>1.13.0<\/h4>\n<\/p>\n<p><strong>Possible Breaking Change for some users<\/strong><\/p>\n<p>The work to introduce the <code>Connection<\/code> and <code>Edge<\/code> (and other) Interfaces required the <code>User.revisions<\/code> and <code>RootQuery.revisions<\/code> connection to<br \/>\nchange from resolving to the <code>ContentRevisionUnion<\/code> type and instead resolve to the <code>ContentNode<\/code> type.<\/p>\n<p>We believe that it&#8217;s highly likely that most users will not be impacted by this change.<\/p>\n<p>Any queries that directly reference the following types:<\/p>\n<ul>\n<li><code>...on UserToContentRevisionUnionConnection<\/code><\/li>\n<li><code>...on RootQueryToContentRevisionUnionConnection<\/code><\/li>\n<\/ul>\n<p>Would need to be updated to reference these types instead:<\/p>\n<ul>\n<li><code>...on UserToRevisionsConnection<\/code><\/li>\n<li><code>...on RootQueryToRevisionsConnection<\/code><\/li>\n<\/ul>\n<p>For example:<\/p>\n<p><strong>BEFORE<\/strong><\/p>\n<pre><code>`graphql\n<\/code><\/pre>\n<p>{<br \/>\n  viewer {<br \/>\n    revisions {<br \/>\n      &#8230; on UserToContentRevisionUnionConnection {<br \/>\n        nodes {<br \/>\n          __typename<br \/>\n          &#8230; on Post {<br \/>\n            id<br \/>\n            uri<br \/>\n            isRevision<br \/>\n          }<br \/>\n          &#8230; on Page {<br \/>\n            id<br \/>\n            uri<br \/>\n            isRevision<br \/>\n          }<br \/>\n        }<br \/>\n      }<br \/>\n    }<br \/>\n  }<br \/>\n  revisions {<br \/>\n    &#8230; on RootQueryToContentRevisionUnionConnection {<br \/>\n      nodes {<br \/>\n        __typename<br \/>\n        &#8230; on Post {<br \/>\n          id<br \/>\n          uri<br \/>\n          isRevision<br \/>\n        }<br \/>\n        &#8230; on Page {<br \/>\n          id<br \/>\n          uri<br \/>\n          isRevision<br \/>\n        }<br \/>\n      }<br \/>\n    }<br \/>\n  }<br \/>\n}<br \/>\n    `<\/p>\n<p><strong>AFTER<\/strong><\/p>\n<pre><code>`graphql\n<\/code><\/pre>\n<p>{<br \/>\n  viewer {<br \/>\n    revisions {<br \/>\n      &#8230; on UserToRevisionsConnection {<br \/>\n        nodes {<br \/>\n          __typename<br \/>\n          &#8230; on Post {<br \/>\n            id<br \/>\n            uri<br \/>\n            isRevision<br \/>\n          }<br \/>\n          &#8230; on Page {<br \/>\n            id<br \/>\n            uri<br \/>\n            isRevision<br \/>\n          }<br \/>\n        }<br \/>\n      }<br \/>\n    }<br \/>\n  }<br \/>\n  revisions {<br \/>\n    &#8230; on RootQueryToRevisionsConnection {<br \/>\n      nodes {<br \/>\n        __typename<br \/>\n        &#8230; on Post {<br \/>\n          id<br \/>\n          uri<br \/>\n          isRevision<br \/>\n        }<br \/>\n        &#8230; on Page {<br \/>\n          id<br \/>\n          uri<br \/>\n          isRevision<br \/>\n        }<br \/>\n      }<br \/>\n    }<br \/>\n  }<br \/>\n}<br \/>\n    `<\/p>\n<p><strong>New Features<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2617\" rel=\"nofollow ugc\">#2617<\/a>: feat: Introduce Connection, Edge and other common Interfaces.<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2563\" rel=\"nofollow ugc\">#2563<\/a>: feat: refactor mutation registration to use new <code>WPMutationType<\/code>. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2557\" rel=\"nofollow ugc\">#2557<\/a>: feat: add <code>deregister_graphql_type()<\/code> access function and corresponding <code>graphql_excluded_types<\/code> filter. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2546\" rel=\"nofollow ugc\">#2546<\/a>: feat: Add new <code>register_graphql_edge_fields()<\/code> and <code>register_graphql_connection_where_args()<\/code> access functions. Thanks @justlevine!<\/li>\n<\/ul>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2622\" rel=\"nofollow ugc\">#2622<\/a>: fix: deprecate the <code>previews<\/code> field for non-publicly queryable post types, and limit the <code>Previewable<\/code> Interface to publicly queryable post types.<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2614\" rel=\"nofollow ugc\">#2614<\/a>: chore(deps): bump loader-utils from 2.0.3 to 2.0.4.<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2540\" rel=\"nofollow ugc\">#2540<\/a>: fix: deprecate <code>Comment.approved<\/code> field in favor of <code>Comment.status: CommentStatusEnum<\/code>. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2542\" rel=\"nofollow ugc\">#2542<\/a>: Move parse_request logic in <code>NodeResolver::resolve_uri()<\/code> to its own method. Thanks @justlevine!<\/li>\n<\/ul>\n<p><h4>1.12.2<\/h4>\n<\/p>\n<p><strong>New Features<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2541\" rel=\"nofollow ugc\">#2541<\/a>): feat: Obfuscate SendPasswordResetEmail response. Thanks @justlevine!<\/li>\n<\/ul>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2544\" rel=\"nofollow ugc\">#2544<\/a>): chore: log and cleanup deprecations. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2605\" rel=\"nofollow ugc\">#2605<\/a>): chore: bump tested version of WordPress to 6.1. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2606\" rel=\"nofollow ugc\">#2606<\/a>): fix: update resolver in post-&gt;author connection to be more strict about the value of the author ID<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2609\" rel=\"nofollow ugc\">#2609<\/a>): chore(deps): bump loader-utils from 2.0.2 to 2.0.3<\/li>\n<\/ul>\n<p><h4>1.12.1<\/h4>\n<\/p>\n<p><strong>New Features<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2593\" rel=\"nofollow ugc\">#2593<\/a>): feat: use sha256 instead of md5 for hashing queryId<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2581\" rel=\"nofollow ugc\">#2581<\/a>): feat: support deprecation reason when using <code>register_graphql_connection<\/code>.<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2603\" rel=\"nofollow ugc\">#2603<\/a>): feat: add GraphQL operation name to x-graphql-keys headers.<\/li>\n<\/ul>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2472\" rel=\"nofollow ugc\">#2472<\/a>): fix: Return CommentAuthor avatar urls in public requests. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2549\" rel=\"nofollow ugc\">#2549<\/a>): chore: fix bug_report.yml description input. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2582\" rel=\"nofollow ugc\">#2582<\/a>): fix(noderesolver): adding extra_query_vars in graphql_pre_resolve_uri. Thanks @yanmorinokamca!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2583\" rel=\"nofollow ugc\">#2583<\/a>): chore: prepare docs for new website. Thanks @moonmeister!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2590\" rel=\"nofollow ugc\">#2590<\/a>): fix: Add list of node types as X-GraphQL-Keys instead of list of edge types<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2599\" rel=\"nofollow ugc\">#2599<\/a>): fix: only use Appsero <code>add_plugin_data<\/code> if the method exists in the version of the Appsero client that&#8217;s loaded.<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2600\" rel=\"nofollow ugc\">#2600<\/a>): docs: fix contributing doc render errors. Thanks @moonmeister!<\/li>\n<\/ul>\n<p><h4>1.12.0<\/h4>\n<\/p>\n<p><strong>Upgrading<\/strong><\/p>\n<p>This release removes the <code>ContentNode<\/code> and <code>DatabaseIdentifier<\/code> interfaces from the <code>NodeWithFeaturedImage<\/code> Interface.<\/p>\n<p>This is considered a breaking change for client applications using a <code>...on NodeWithFeaturedImage<\/code> fragment that reference fields applied by those interfaces. If you have client applications doing this (or are unsure if you do) you can use the following filter to bring back the previous behavior:<\/p>\n<pre><code>`php\n<\/code><\/pre>\n<p>add_filter( &#8216;graphql_wp_interface_type_config&#8217;, function( $config ) {<br \/>\n    if ( $config[&#8216;name&#8217;] === &#8216;NodeWithFeaturedImage&#8217; ) {<br \/>\n        $config[&#8216;interfaces&#8217;][] = &#8216;ContentNode&#8217;;<br \/>\n        $config[&#8216;interfaces&#8217;][] = &#8216;DatabaseIdentifier&#8217;;<br \/>\n    }<br \/>\n    return $config;<br \/>\n}, 10, 1 );<br \/>\n    `<\/p>\n<p><strong>New Features<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2399\" rel=\"nofollow ugc\">#2399<\/a>): New Schema Customization options for register_post_type and register_taxonomy. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2565\" rel=\"nofollow ugc\">#2565<\/a>): Expose X-GraphQL-URL header.<\/li>\n<\/ul>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2568\" rel=\"nofollow ugc\">#2568<\/a>): Fix typo in docs. Thanks @altearius!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2569\" rel=\"nofollow ugc\">#2569<\/a>): Update Appsero Client SDK.<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2571\" rel=\"nofollow ugc\">#2571<\/a>): Dependabot bumps.<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2572\" rel=\"nofollow ugc\">#2572<\/a>): Fixes a bug in the GraphiQL Query Composer when working with fields that return Unions. Thanks @chrisherold!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2556\" rel=\"nofollow ugc\">#2556<\/a>): Updates script that installs test environment to use env vars. Makes spinning up environments more convenient for contributors. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2538\" rel=\"nofollow ugc\">#2538<\/a>): Updates phpstan and fixes surfaced issues. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2545\" rel=\"nofollow ugc\">#2545<\/a>): Update WPBrowser to v3.1.6 and update test for SendPasswordResetEmail. Thanks @justlevine!<\/li>\n<\/ul>\n<p><h4>1.11.3<\/h4>\n<\/p>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2555\" rel=\"nofollow ugc\">#2555<\/a>): Further changes to <code>X-GraphQL-Keys<\/code> header output. Truncate keys based on a filterable max length. Output the skipped keys in extensions payload for debugging, and add <code>skipped:$type<\/code> keys to the X-GraphQL-Keys header for nodes that are skipped.<\/li>\n<\/ul>\n<p><h4>1.11.2<\/h4>\n<\/p>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2551\" rel=\"nofollow ugc\">#2551<\/a>): Chunks X-GraphQL-Keys header into multiple headers under a set max header limit length.<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2539\" rel=\"nofollow ugc\">#2539<\/a>): Set IDE direction to prevent breaks in RTL mode. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2549\" rel=\"nofollow ugc\">#2549<\/a>): Fix bug_report.yml field to be textarea instead of input. Thanks @justlevine!<\/li>\n<\/ul>\n<p><h4>1.11.1<\/h4>\n<\/p>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2530\" rel=\"nofollow ugc\">#2530<\/a>): Fixes a regression introduced in v1.11.0 where querying menuItems with parentId where arg set to 0 was returning all menuItems instead of just top level items.<\/li>\n<\/ul>\n<p><h4>1.11.0<\/h4>\n<\/p>\n<p><strong>New Features<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2519\" rel=\"nofollow ugc\">#2519<\/a>): Add new &#8220;QueryAnalyzer&#8221; class which tracks Types, Models and Nodes asked for and returned in a request and adds them to the response headers.<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2519\" rel=\"nofollow ugc\">#2519<\/a>): Add 2nd argument to <code>graphql()<\/code> function that will return the <code>Request<\/code> object instead executing and returning the response.<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2522\" rel=\"nofollow ugc\">#2522<\/a>): Allow global\/database IDs in Comment connection where args. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2523\" rel=\"nofollow ugc\">#2523<\/a>): Allow global\/database IDs in MenuItem connection where args ID Inputs. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2524\" rel=\"nofollow ugc\">#2524<\/a>): Allow global\/database IDs in Term connection where args ID Inputs. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2525\" rel=\"nofollow ugc\">#2525<\/a>): Allow global\/database IDs in Post connection where args ID Inputs. Thanks @justlevine!<\/li>\n<\/ul>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2521\" rel=\"nofollow ugc\">#2521<\/a>): Refactor <code>$args<\/code> in AbstractConnectionResolver. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2526\" rel=\"nofollow ugc\">#2526<\/a>): Ensure tracked data in QueryAnalyzer is unique.<\/li>\n<\/ul>\n<p><h4>1.10.0<\/h4>\n<\/p>\n<p><strong>New Features<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2503\" rel=\"nofollow ugc\">#2503<\/a>): Enable codeception debugging via Github Actions. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2502\" rel=\"nofollow ugc\">#2502<\/a>): Add <code>idType<\/code> arg to <code>RootQuery.comment<\/code>. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2505\" rel=\"nofollow ugc\">#2505<\/a>): Return user after <code>resetUserPassword<\/code> mutation. Thanks @justlevine!<\/li>\n<\/ul>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2482\" rel=\"nofollow ugc\">#2482<\/a>): Add PHP Code Sniffer support for the WordPress.com VIP GO standard. Thanks @renatonascalves!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2490\" rel=\"nofollow ugc\">#2490<\/a>): Fix bug related to querying the page set as &#8220;Posts Page&#8221;<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2497\" rel=\"nofollow ugc\">#2497<\/a>): Only enqueue admin scripts on the settings page. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2498\" rel=\"nofollow ugc\">#2498<\/a>): Add <code>include<\/code> and <code>exclude<\/code> args to <code>MediaDetails.sizes<\/code>. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2499\" rel=\"nofollow ugc\">#2499<\/a>): Check for multiple theme capabilities in the Theme Model. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2504\" rel=\"nofollow ugc\">#2504<\/a>): Filter <code>mediaItems<\/code> query by <code>mimeType<\/code>. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2506\" rel=\"nofollow ugc\">#2506<\/a>): Update descriptions for input fields that accept a <code>databaseId<\/code>. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2511\" rel=\"nofollow ugc\">#2511<\/a>): Update link in docs to point to correct &#8220;nonce&#8221; example. Thanks @NielsdeBlaauw!<\/li>\n<\/ul>\n<p><h4>1.9.1<\/h4>\n<\/p>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2471\" rel=\"nofollow ugc\">#2471<\/a>): feat: PHPCS: enhancements to the Coding Standards Setup. Thanks @renatonascalves!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2472\" rel=\"nofollow ugc\">#2472<\/a>): fix: return CommentAuthor avatar urls to public users. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2473\" rel=\"nofollow ugc\">#2473<\/a>): fix: Update GraphiQL &#8220;user switch&#8221; to be accessible. Thanks @nickcernis!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2477\" rel=\"nofollow ugc\">#2477<\/a>): fix(graphiql): graphiql fails if variables are invalid json<\/li>\n<\/ul>\n<p><h4>1.9.0<\/h4>\n<\/p>\n<p><strong>Upgrading<\/strong><\/p>\n<p>There are 2 changes that <strong>might<\/strong> require action when updating to 1.9.0.<\/p>\n<ol>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2464\" rel=\"nofollow ugc\">#2464<\/a>)<\/li>\n<\/ol>\n<p>When querying for a <code>nodeByUri<\/code>, if your site has the &#8220;page_for_posts&#8221; setting configured, the behavior of the <code>nodeByUri<\/code> query for that uri might be different for you.<\/p>\n<p>Previously a bug caused this query to return a &#8220;Page&#8221; type, when it should have returned a &#8220;ContentType&#8221; Type.<\/p>\n<p>The bug fix might change your application if you were using the bug as a feature.<\/p>\n<ol>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2457\" rel=\"nofollow ugc\">#2457<\/a>)<\/li>\n<\/ol>\n<p>There were a lot of bug fixes related to connections to ensure they behave as intended. If you were querying lists of data, in some cases the data might be returned in a different order than it was before.<\/p>\n<p>For example, using the &#8220;last&#8221; input on a Comment or User query should still return the same nodes, but in a different order than before.<\/p>\n<p>This might cause behavior you don&#8217;t want in your application because you had coded around the bug. This change was needed to support proper backward pagination.<\/p>\n<p>** Chores \/ Bugfixes**<\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2450\" rel=\"nofollow ugc\">#2450<\/a>): Fix PHPCompatibility lint config. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2452\" rel=\"nofollow ugc\">#2452<\/a>): Fixes a bug with <code>Comment.author<\/code> connections not properly resolving for public (non-authenticated) requests.<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2453\" rel=\"nofollow ugc\">#2453<\/a>): Update Github Workflows to use PHP 7.3. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2454\" rel=\"nofollow ugc\">#2454<\/a>): Add linter to ensure Pull Requests use &#8220;Conventional Commit&#8221; standards.<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2455\" rel=\"nofollow ugc\">#2455<\/a>): Refactors and Lints the WPUnit tests. Cleans up some &#8220;leaky&#8221; data in test suites. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2457\" rel=\"nofollow ugc\">#2457<\/a>): Refactor Connection Resolvers to better adhere to Relay Connection spec. This fixes several bugs related to pagination across connections, specifically User and Comment connections which didn&#8217;t properly support backward pagination at all. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2460\" rel=\"nofollow ugc\">#2460<\/a>): Update documentation for running tests with Docker. Thanks @markkelnar!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2463\" rel=\"nofollow ugc\">#2463<\/a>): Add Issue templates to the repo. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2464\" rel=\"nofollow ugc\">#2464<\/a>): Fixes node resolver when &#8220;page_for_posts&#8221; setting is set to a page.<\/li>\n<\/ul>\n<p><h4>1.8.7<\/h4>\n<\/p>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2441\" rel=\"nofollow ugc\">#2441<\/a>): Fix <code>contentNodes<\/code> field not showing if a taxonomy is registered without connected post types. Thanks @saimonh3!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2446\" rel=\"nofollow ugc\">#2446<\/a>): Update &#8220;terser&#8221; from 5.11.0 to 5.14.2 (GraphiQL Dependency)<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2440\" rel=\"nofollow ugc\">#2440<\/a>): Update JS dependencies for GraphiQL<\/li>\n<\/ul>\n<p><strong>New Features<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2435\" rel=\"nofollow ugc\">#2435<\/a>): Add filter in execute for query string. Thanks @markkelnar!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2432\" rel=\"nofollow ugc\">#2432<\/a>): Add <code>query_id<\/code> to <code>after_execute_actions<\/code> for batch requests. Thanks @markkelnar!<\/li>\n<\/ul>\n<p><h4>1.8.6<\/h4>\n<\/p>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2427\" rel=\"nofollow ugc\">#2427<\/a>): Fixes a regression of the 1.8.3 release where there could be fatal errors when GraphQL Tracing is enabled and a queryId is used as a query param.<\/li>\n<\/ul>\n<p><h4>1.8.5<\/h4>\n<\/p>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2422\" rel=\"nofollow ugc\">#2422<\/a>): Fixes a regression of the 1.8.3 release where there could be fatal errors when GraphQL Tracing is enabled.<\/li>\n<\/ul>\n<p><h4>1.8.4<\/h4>\n<\/p>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2416\" rel=\"nofollow ugc\">#2416<\/a>): Fixes schema artifact workflow in Github.<\/li>\n<\/ul>\n<p><h4>1.8.3<\/h4>\n<\/p>\n<p><strong>New Features<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2388\" rel=\"nofollow ugc\">#2388<\/a>): Adds ability to query menus by SLUG and LOCATION. Thanks @justlevine!<\/li>\n<\/ul>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2412\" rel=\"nofollow ugc\">#2412<\/a>): Update tests to run in PHP 8, 8.1 and with WordPress 6.0. Updates Docker Deploy workflow as well.<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2411\" rel=\"nofollow ugc\">#2411<\/a>): Fixes bug where menuItems &#8220;location&#8221; arg was conflicting if a taxonomy is also registered with &#8220;location&#8221; as its name.<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2410\" rel=\"nofollow ugc\">#2410<\/a>): Fixes a regression with Taxonomy Connection pagination.<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2406\" rel=\"nofollow ugc\">#2406<\/a>): Updates PHPUnit, WPBrowser and WPGraphQL Test Case for use in workflows. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2387\" rel=\"nofollow ugc\">#2387<\/a>): Fixes a bug with asset versions when querying for Enqueued Scripts and Styles. Thanks @justlevine!<\/li>\n<\/ul>\n<p><h4>1.8.2<\/h4>\n<\/p>\n<p><strong>New Features<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2363\" rel=\"nofollow ugc\">#2363<\/a>): Adds &#8220;uri&#8221; field to MenuItem type which resolves the path of the node which can then be used in a <code>nodeByUri<\/code> query to get the linked node. The path is relative and does not contain subdirectory path in a subdirectory multisite. the <code>path<\/code> field does include the multisite subdirectory path, still. Thanks @josephfusco and @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2337\" rel=\"nofollow ugc\">#2337<\/a>): Allows for either global ID or databaseId to be supplied in the ID field for user mutations. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2338\" rel=\"nofollow ugc\">#2338<\/a>): Allows either global &#8220;relay&#8221; ID or databaseId for post object mutations. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2336\" rel=\"nofollow ugc\">#2336<\/a>): Allows either global &#8220;relay&#8221; ID or databaseId for term object mutations. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2331\" rel=\"nofollow ugc\">#2331<\/a>): Allows either global &#8220;relay&#8221; ID or databaseId for MediaItem object mutations. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2328\" rel=\"nofollow ugc\">#2328<\/a>): Allows either global &#8220;relay&#8221; ID or databaseId for Comment object mutations. Thanks @justlevine!<\/li>\n<\/ul>\n<p><strong>Chores\/Bugfixes<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2368\" rel=\"nofollow ugc\">#2368<\/a>): Updates dependencies for Schema Linter workflow.<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2369\" rel=\"nofollow ugc\">#2369<\/a>): Replaces the Codecov badge in the README with Coveralls badge. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2374\" rel=\"nofollow ugc\">#2374<\/a>): Updates descriptions for PostObjectFieldFormatEnum. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2375\" rel=\"nofollow ugc\">#2375<\/a>): Sets up the testing integration workflow to be able to run in multisite. Adds one workflow that runs in multisite. Fixes tests related to multisite.<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2276\" rel=\"nofollow ugc\">#2376<\/a>): Adds support for <code>['auth']['callback']<\/code> and <code>isPrivate<\/code> for the <code>register_graphql_mutation()<\/code> API.<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2379\" rel=\"nofollow ugc\">#2379<\/a>): Fixes a bug where term mutations were adding slashes when being stored in the database.<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2380\" rel=\"nofollow ugc\">#2380<\/a>): Fixes a bug where WPGraphQL wasn&#8217;t sending the Wp class to the <code>parse_request<\/code> filter as a reference.<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2382\" rel=\"nofollow ugc\">#2382<\/a>): Fixes a bug where <code>register_graphql_field()<\/code> was not being respected by GraphQL Types added to the schema to represent Setting Groups of the core WordPress <code>register_setting()<\/code> API.<\/li>\n<\/ul>\n<p><h4>1.8.1<\/h4>\n<\/p>\n<p><strong>New Features<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2349\" rel=\"nofollow ugc\">#2349<\/a>): Adds tags to wpkses_post for WPGraphQL settings pages to be extended further. Thanks @eavonius!<\/li>\n<\/ul>\n<p><strong>Chores\/Bugfixes<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2358\" rel=\"nofollow ugc\">#2358<\/a>): Updates NPM dependencies. Thanks @dependabot!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2357\" rel=\"nofollow ugc\">#2357<\/a>): Updates NPM dependencies. Thanks @dependabot!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2356\" rel=\"nofollow ugc\">#2356<\/a>): Refactors codebase to take advantage of the work done in #2353. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2354\" rel=\"nofollow ugc\">#2354<\/a>): Fixes console warnings in GraphiQL related to missing React keys.<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2353\" rel=\"nofollow ugc\">#2353<\/a>): Refactors the WPGraphQL::get_allowed_post_types() and WPGraphQL::get_allowed_taxonomies() functions. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2350\" rel=\"nofollow ugc\">#2350<\/a>): Fixes bug where Comment Authors were not always properly returning<\/li>\n<\/ul>\n<p><h4>1.8.0<\/h4>\n<\/p>\n<p><strong>New Features<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2286\" rel=\"nofollow ugc\">#2286<\/a>): Introduce new <code>Utils::get_database_id_from_id()<\/code> function to help DRY up some code around inputs that can accept Global IDs or Database IDs. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2327\" rel=\"nofollow ugc\">#2327<\/a>): Update capability for plugin queries. Changes from <code>update_plugins<\/code> to <code>activate_plugins<\/code>. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2298\" rel=\"nofollow ugc\">#2298<\/a>): Adds <code>$where<\/code> arguments to Plugin Connections. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2332\" rel=\"nofollow ugc\">#2332<\/a>): Adds new Github workflow to build the GraphiQL App on pushes to <code>develop<\/code> and <code>master<\/code>. This should allow users that install WPGraphQL to install\/update with Composer and have the GraphiQL app running, instead of having to run <code>npm install &amp;&amp; npm run build<\/code> in addition to <code>composer install<\/code>.<\/li>\n<\/ul>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2286\" rel=\"nofollow ugc\">#2286<\/a>): Remove old, no-longer used JS files. Remnant from 1.7.0 release.<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2296\" rel=\"nofollow ugc\">#2296<\/a>): Fixes bug with how post\/page templates are added to the Schema. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2295\" rel=\"nofollow ugc\">#2295<\/a>): Fixes bug where menus were returning when they shouldn&#8217;t be. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2299\" rel=\"nofollow ugc\">#2299<\/a>): Fixes bug with author ID not being cast to an integer properly in the MediaItemUpdate mutation. Thanks @abaicus!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2310\" rel=\"nofollow ugc\">#2310<\/a>): Bumps node-forge npm dependency<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2317\" rel=\"nofollow ugc\">#2317<\/a>): Bumps composer dependencies<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2291\" rel=\"nofollow ugc\">#2291<\/a>): Add &#8220;allow-plugins&#8221; to composer.json to reduce warning output when running composer install. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2294\" rel=\"nofollow ugc\">#2294<\/a>): Refactors AbstractConnectionResolver::get_nodes() to prevent double slicing. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2293\" rel=\"nofollow ugc\">#2293<\/a>): Fixes connections that can be missing nodes when before\/after arguments are empty. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2323\" rel=\"nofollow ugc\">#2323<\/a>): Fixes bug in Comment mutations. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2320\" rel=\"nofollow ugc\">#2320<\/a>): Fixes bug with filtering comments by commentType. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2319\" rel=\"nofollow ugc\">#2319<\/a>): Fixes bug with the comment_text filter in Comment queries. Thanks @justlevine!<\/li>\n<\/ul>\n<p><h4>1.7.2<\/h4>\n<\/p>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2276\" rel=\"nofollow ugc\">#2276<\/a>): Fixes a bug where <code>generalSettings.url<\/code> field was not in the Schema for multisite installs.<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2278\" rel=\"nofollow ugc\">#2278<\/a>): Adds a composer post-install script that installs JS dependencies and builds the JS app when <code>composer install<\/code> is run<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2277\" rel=\"nofollow ugc\">#2277<\/a>): Adds a condition to the docker image to only run <code>npm<\/code> scripts if the project has a package.json. Thanks @markkelnar!<\/li>\n<\/ul>\n<h4>1.7.1<\/h4>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2268\" rel=\"nofollow ugc\">#2268<\/a>): Fixes a bug in GraphiQL that would update browser history with every change to a query param.<\/li>\n<\/ul>\n<h4>1.7.0<\/h4>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2228\" rel=\"nofollow ugc\">#2228<\/a>): Allows optional fields to be set to empty values in the <code>updateUser<\/code> mutation. Thanks @victormattosvm!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2247\" rel=\"nofollow ugc\">#2247<\/a>): Add WordPress 5.9 to the automated testing matrix. Thanks @markkelnar!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2242\" rel=\"nofollow ugc\">#2242<\/a>): Adds End 2 End tests to test GraphiQL functionality in the admin.<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2261\" rel=\"nofollow ugc\">#2261<\/a>): Fixes a bug where the <code>pageByUri<\/code> query might return incorrect data when custom permalinks are set. Thanks @blakewilson!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2263\" rel=\"nofollow ugc\">#2263<\/a>): Adds documentation entry for WordPress Application Passwords guide. Thanks @abhisekmazumdar!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2262\" rel=\"nofollow ugc\">#2262<\/a>): Fixes a bug where settings registered via the core <code>register_setting()<\/code> API would cause Schema Introspection failures, causing GraphiQL and other tools to not work properly.<\/li>\n<\/ul>\n<p><strong>New Features<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2248\" rel=\"nofollow ugc\">#2248<\/a>): WPGraphiQL (the GraphiQL IDE in the WordPress dashboard) has been re-built to have an extension architecture and some updated user interfaces. Thanks for contributing to this effort @scottyzen!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2246\" rel=\"nofollow ugc\">#2246<\/a>): Adds support for querying the <code>avatar<\/code> for the CommentAuthor Type and the Commenter Interface type.<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2236\" rel=\"nofollow ugc\">#2236<\/a>): Introduces new <code>graphql_model_prepare_fields<\/code> filter and deprecates <code>graphql_return_modeled_data<\/code> filter. Thanks @justlevine!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2265\" rel=\"nofollow ugc\">#2265<\/a>): Adds opt-in telemetry tracking via Appsero, to allow us to collect helpful information for prioritizing future feature work, etc.<\/li>\n<\/ul>\n<h4>1.6.12<\/h4>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2209\" rel=\"nofollow ugc\">#2209<\/a>): Adds WordPress 5.8 to the testing matrix. Thanks @markkelnar!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2211\" rel=\"nofollow ugc\">#2211<\/a>), (<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2216\" rel=\"nofollow ugc\">#2216<\/a>), (<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2221\" rel=\"nofollow ugc\">#2221<\/a>), (<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2223\" rel=\"nofollow ugc\">#2223<\/a>): Bumps NPM dependencies for GraphiQL<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2212\" rel=\"nofollow ugc\">#2212<\/a>): Fixes how the <code>TermObject.uri<\/code> strips the link down to the path. Thanks @theodesp!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2215\" rel=\"nofollow ugc\">#2215<\/a>): Fixes testing environment to play nice with a recent wp-browser update.<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2218\" rel=\"nofollow ugc\">#2218<\/a>): Update note on settings page explaining that Public Introspection is enabled when GraphQL Debug mode is enabled.<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2220\" rel=\"nofollow ugc\">#2220<\/a>): Adds CodeQL workflow to analyze JavaScript on PRs<\/li>\n<\/ul>\n<h4>1.6.11<\/h4>\n<p><strong>Chores \/ Bugfixes<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2177\" rel=\"nofollow ugc\">#2177<\/a>): Prevents PHP notice when clientMutationId is not set on mutations. Thanks @oskarmodig!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2182\" rel=\"nofollow ugc\">#2182<\/a>): Fixes bug where the graphql endpoint couldn&#8217;t be accessed by a site domain other than the site_url(). Thanks @moommeister!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2184\" rel=\"nofollow ugc\">#2184<\/a>): Fixes regression where duplicate type warning was not being displayed after lazy type loading was added in v1.6.0.<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2189\" rel=\"nofollow ugc\">#2189<\/a>): Fixes bug with content node previews<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2196\" rel=\"nofollow ugc\">#2196<\/a>): Further bug fixes for content node previews. Thanks @apmattews!<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2197\" rel=\"nofollow ugc\">#2197<\/a>): Fixes call to prepare_fields() to not be called statically. Thanks @justlevine!<\/li>\n<\/ul>\n<p><strong>New Features<\/strong><\/p>\n<ul>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2188\" rel=\"nofollow ugc\">#2188<\/a>): Adds <code>contentTypeName<\/code> to the <code>ContentNode<\/code> type.<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2199\" rel=\"nofollow ugc\">#2199<\/a>): Pass the TypeRegistry instance through to the <code>graphql_schema_config<\/code> filter.<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2204\" rel=\"nofollow ugc\">#2204<\/a>): Allow a <code>root_value<\/code> to be set when calling the <code>graphql()<\/code> function.<\/li>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2203\" rel=\"nofollow ugc\">#2203<\/a>): Adds new filter to mutations to filter the input args before execution, and a new action after execution, before returning the mutation, to allow additional data to be stored during mutations. Thanks @markkelnar!<\/li>\n<\/ul>\n<h4>1.6.10<\/h4>\n<ul>\n<li>Updating stable tag for WordPress.org<\/li>\n<\/ul>\n<h4>1.6.9<\/h4>\n<ul>\n<li>No functional changes from  &hellip;<\/li>\n<\/ul>\n",
        "screenshots": "<ol><li><a href=\"https:\/\/ps.w.org\/wp-graphql\/assets\/screenshot-1.jpg?rev=2482884\"><img src=\"https:\/\/ps.w.org\/wp-graphql\/assets\/screenshot-1.jpg?rev=2482884\" alt=\"\"><\/a><\/li><li><a href=\"https:\/\/ps.w.org\/wp-graphql\/assets\/screenshot-2.jpg?rev=2482884\"><img src=\"https:\/\/ps.w.org\/wp-graphql\/assets\/screenshot-2.jpg?rev=2482884\" alt=\"\"><\/a><\/li><\/ol>",
        "reviews": "<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Performance performance performance<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/psychosispicks\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/88352c9f2a880afd4de0dffaf22c88e1?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/88352c9f2a880afd4de0dffaf22c88e1?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/psychosispicks\/\" class=\"reviewer-name\">psychosispicks<\/a> on <span class=\"review-date\">September 7, 2023<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\"><!-- wp:paragraph -->\n<p class=\"\">I'm so glad I decided to transition to a headless WP, and WPGraphQL made this possible, convenient and super fast.<\/p>\n<!-- \/wp:paragraph --><\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Unreliable<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"3 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"3\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-empty\"><\/span><span class=\"star dashicons dashicons-star-empty\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/benknight\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/ebcf2021019334e419a2d06c415df05f?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/ebcf2021019334e419a2d06c415df05f?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/benknight\/\" class=\"reviewer-name\">benknight<\/a> on <span class=\"review-date\">May 29, 2023<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\"><!-- wp:paragraph -->\n<p>I operate a large blog that uses WordPress as a headless CMS with a Next.JS frontend, which is largely enabled by this plugin. Let me just say first that creating an entire alternative third-party data API is an ambitious undertaking and I appreciate all the work the authors have put into it.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>But as a developer I have to throw out a word of caution that this plugin often has major bugs that can have critical impact on your production website. For example after a recent minor update  we discovered a bug where any URL with a special character in it started returning a 404, causing several of our pages to suddenly become unavailable to users and delisted from Google, and this went on for many months before we realized it.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>There have been many similar instances. My general approach is to lean more on WordPress's REST API over time which is more reliable since it's maintained by the WordPress team, and only use WPGraphQL when it's necessary.<\/p>\n<!-- \/wp:paragraph -->\n\n<!-- wp:paragraph -->\n<p>Also recommend turning off auto-updates and test your website extremely thoroughly after any upgrade.<\/p>\n<!-- \/wp:paragraph --><\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Great! 10 stars if possible<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/chisnghiax\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/37ec75651dfacf5b1372b8769e1f213b?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/37ec75651dfacf5b1372b8769e1f213b?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/chisnghiax\/\" class=\"reviewer-name\">chisnghiax<\/a> on <span class=\"review-date\">September 7, 2022<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">Great!<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Great Plugin!<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/2cubed\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/4eef206af95cf3ea278c9a05e214bfb5?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/4eef206af95cf3ea278c9a05e214bfb5?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/2cubed\/\" class=\"reviewer-name\">2cubed<\/a> on <span class=\"review-date\">August 26, 2022<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">One of the best plugins for WordPress. It's right up there with ACF!<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Awesome, everybody should use it<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/mauretto1978\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/88abe34310ab7872e36b63adf9bac3ba?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/88abe34310ab7872e36b63adf9bac3ba?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/mauretto1978\/\" class=\"reviewer-name\">mauretto1978<\/a> on <span class=\"review-date\">May 31, 2022<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">Great plugin,\n\neveryone should use it. \n\nThe IDE is a valuable plus, and it can be used to learn GraphQL from scratch.\n\nFrom the developer's point of view, the plugin is super easy to extend, thanks to the great documentation.\n\nDon't forget to check the official YouTube channel.\n\nIf you need extra support for custom post types and metas, I just released v1.0.70 of my plugin ACPT with full support to WPGraphQL.\n\nThank you so much John!<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Excellent tool and support<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/runonce\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/9e3c81344cf2f64c99755a639ebeac6f?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/9e3c81344cf2f64c99755a639ebeac6f?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/runonce\/\" class=\"reviewer-name\">Camilo <small>(runonce)<\/small><\/a> on <span class=\"review-date\">April 25, 2022<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">Great tool for getting data from your WP into your SPA.\n\nI had some trouble with a conflicting plugin (Post Types Order) that caused unexpted results when paginating my posts but the support provided by both Jason Bahl and David Levine was absolutely top notch and I managed to resolve the issue within hours.<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Definitely Recommend<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/turboloop\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/8994ce5888e4653f1495ab0ba6566f71?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/8994ce5888e4653f1495ab0ba6566f71?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/turboloop\/\" class=\"reviewer-name\">turboloop<\/a> on <span class=\"review-date\">March 23, 2022<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">Over a year ago I switched from using REST to this plugin. I mainly build Angular Apps using Apollo client. Works perfectly fine and increases development speed.<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">The Future<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/scottyzen\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/f79707dfa81f8db7754d7e3104848376?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/f79707dfa81f8db7754d7e3104848376?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/scottyzen\/\" class=\"reviewer-name\">scottyzen<\/a> on <span class=\"review-date\">December 3, 2021<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">This plugin is a game-changer. Once you start using it you really get a feel of how powerful it is. Why anyone would choose REST API now sounds crazy to me.<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Works great for Headless WordPress site with Gatsby<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/ctack\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/733eef3c05a801ffe04a16c9b3af3e8c?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/733eef3c05a801ffe04a16c9b3af3e8c?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/ctack\/\" class=\"reviewer-name\">Chris <small>(ctack)<\/small><\/a> on <span class=\"review-date\">September 10, 2021<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">Loving the ease of implementation for a headless WordPress site with a GatsbyJS front end<\/div>\n<\/div>\n<div class=\"review\">\n\t<div class=\"review-head\">\n\t\t<div class=\"reviewer-info\">\n\t\t\t<div class=\"review-title-section\">\n\t\t\t\t<h4 class=\"review-title\">Excellent!<\/h4>\n\t\t\t\t<div class=\"star-rating\">\n\t\t\t\t<div class=\"wporg-ratings\" aria-label=\"5 out of 5 stars\" data-title-template=\"%s out of 5 stars\" data-rating=\"5\" style=\"color:#ffb900;\"><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><span class=\"star dashicons dashicons-star-filled\"><\/span><\/div>\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<p class=\"reviewer\">\n\t\t\t\tBy <a href=\"https:\/\/profiles.wordpress.org\/jonofat\/\"><img alt='' src='https:\/\/secure.gravatar.com\/avatar\/e5d3f64253293bf9436f7b3dc35b4ea4?s=16&#038;d=monsterid&#038;r=g' srcset='https:\/\/secure.gravatar.com\/avatar\/e5d3f64253293bf9436f7b3dc35b4ea4?s=32&#038;d=monsterid&#038;r=g 2x' class='avatar avatar-16 photo' height='16' width='16' loading='lazy' decoding='async'\/><\/a><a href=\"https:\/\/profiles.wordpress.org\/jonofat\/\" class=\"reviewer-name\">jonofat<\/a> on <span class=\"review-date\">April 10, 2021<\/span>\t\t\t<\/p>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"review-body\">Don't have much to say other than that this plugin is really amazing and easy to use. Built GraphQL queries for my headless site in a jiffy with this plugin. Keep up the good work!<\/div>\n<\/div>\n"
    },
    "short_description": "WPGraphQL is a free, open-source WordPress plugin that provides an extendable GraphQL schema and API for any WordPress site.",
    "description": "<p>WPGraphQL is a free, open-source WordPress plugin that provides an extendable GraphQL schema and API for any WordPress site.<\/p>\n<p>Below are some links to help you get started with WPGraphQL<\/p>\n<ul>\n<li><a href=\"https:\/\/www.wpgraphql.com\" rel=\"nofollow ugc\">WPGraphQL.com<\/a><\/li>\n<li><a href=\"https:\/\/wpgraphql.com\/docs\/quick-start\" rel=\"nofollow ugc\">Quick Start Guide<\/a><\/li>\n<li><a href=\"https:\/\/wpgraphql.com\/docs\/intro-to-graphql\" rel=\"nofollow ugc\">Intro to GraphQL<\/a><\/li>\n<li><a href=\"https:\/\/wpgraphql.com\/docs\/intro-to-wordpress\" rel=\"nofollow ugc\">Intro to WordPress<\/a><\/li>\n<li><a href=\"https:\/\/join.slack.com\/t\/wp-graphql\/shared_invite\/zt-3vloo60z-PpJV2PFIwEathWDOxCTTLA\" rel=\"nofollow ugc\">Join the WPGraphQL community on Slack<\/a><\/li>\n<\/ul>\n<h4>Build rich JavaScript applications with WordPress and GraphQL<\/h4>\n<p>WPGraphQL allows you to separate your CMS from your presentation layer. Content creators can use the CMS they know, while developers can use the frameworks and tools they love.<\/p>\n<p>WPGraphQL works great with:<\/p>\n<ul>\n<li><a href=\"https:\/\/gatsbyjs.com\" rel=\"nofollow ugc\">Gatsby<\/a><\/li>\n<li><a href=\"https:\/\/www.apollographql.com\/docs\/react\/\" rel=\"nofollow ugc\">Apollo Client<\/a><\/li>\n<li><a href=\"https:\/\/nextjs.org\/\" rel=\"nofollow ugc\">NextJS<\/a><\/li>\n<li>&#8230;and more<\/li>\n<\/ul>\n<h4>Query what you need. Get exactly that.<\/h4>\n<p>With GraphQL, the client makes declarative queries, asking for the exact data needed, and in exactly what was asked for is given in response, nothing more. This allows the client have control over their application, and allows the GraphQL server to perform more efficiently by only fetching the resources requested.<\/p>\n<h4>Fetch many resources in a single request.<\/h4>\n<p>GraphQL queries allow access to multiple root resources, and also smoothly follow references between connected resources. While typical a REST API would require round-trip requests to many endpoints, GraphQL APIs can get all the data your app needs in a single request. Apps using GraphQL can be quick even on slow mobile network connections.<\/p>\n<h4>Powerful Debugging Tools<\/h4>\n<p>WPGraphQL ships with GraphiQL in your WordPress dashboard, allowing you to browse your site&#8217;s GraphQL Schema and test Queries and Mutations.<\/p>\n<h4>Upgrading<\/h4>\n<p>It is recommended that anytime you want to update WPGraphQL that you get familiar with what&#8217;s changed in the release.<\/p>\n<p>WPGraphQL publishes <a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/releases\" rel=\"nofollow ugc\">release notes on Github<\/a>.<\/p>\n<p>WPGraphQL has been following Semver practices for a few years. We will continue to follow Semver and let version numbers communicate meaning. The summary of Semver versioning is as follows:<\/p>\n<ul>\n<li><em>MAJOR<\/em> version when you make incompatible API changes,<\/li>\n<li><em>MINOR<\/em> version when you add functionality in a backwards compatible manner, and<\/li>\n<li><em>PATCH<\/em> version when you make backwards compatible bug fixes.<\/li>\n<\/ul>\n<p>You can read more about the details of Semver at semver.org<\/p>\n<h3>Privacy Policy<\/h3>\n<p>WPGraphQL uses <a href=\"https:\/\/appsero.com\" rel=\"nofollow ugc\">Appsero<\/a> SDK to collect some telemetry data upon user&#8217;s confirmation. This helps us to troubleshoot problems faster &amp; make product improvements.<\/p>\n<p>Appsero SDK <strong>does not gather any data by default.<\/strong> The SDK only starts gathering basic telemetry data <strong>when a user allows it via the admin notice<\/strong>. We collect the data to ensure a great user experience for all our users.<\/p>\n<p>Integrating Appsero SDK <strong>DOES NOT IMMEDIATELY<\/strong> start gathering data, <strong>without confirmation from users in any case.<\/strong><\/p>\n<p>Learn more about how <a href=\"https:\/\/appsero.com\/privacy-policy\/\" rel=\"nofollow ugc\">Appsero collects and uses this data<\/a>.<\/p>\n",
    "download_link": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.23.0.zip",
    "upgrade_notice": {
        "1.16.0": "<p><strong>WPGraphQL Smart Cache<\/strong>\nFor WPGraphQL Smart Cache users, you should update WPGraphQL Smart Cache to v1.2.0 when updating\nWPGraphQL to v1.16.0 to ensure caches continue to purge as expected.<\/p>\n\n<p><strong>Cursor Pagination Updates<\/strong>\nThis version fixes some behaviors of Cursor Pagination which <em>may<\/em> lead to behavior changes in your application.<\/p>\n\n<p>As with any release, we recommend you test in staging environments. For this release, specifically any\nqueries you have using pagination arguments (<code>first<\/code>, <code>last<\/code>, <code>after<\/code>, <code>before<\/code>).<\/p>",
        "1.14.6": "<p>This release includes a security patch. It&#039;s recommended to update as soon as possible.<\/p>\n\n<p>If you&#039;re unable to update to the latest version, we have a snippet you can add to your site.<\/p>\n\n<p>You can read more about it here: https:\/\/github.com\/wp-graphql\/wp-graphql\/security\/advisories\/GHSA-cfh4-7wq9-6pgg<\/p>",
        "1.13.0": "<p>The <code>ContentRevisionUnion<\/code> Union has been removed, and the <code>RootQuery.revisions<\/code> and <code>User.revisions<\/code> connections that used to resolve to this Type now resolve to the <code>ContentNode<\/code> Interface type.<\/p>\n\n<p>This is <em>technically<\/em> a Schema Breaking change, however the behavior for most users querying these fields should remain the same.<\/p>\n\n<p>For example, this query worked before, and still works now:<\/p>\n\n<pre><code>`graphql\n<\/code><\/pre>\n\n<p>{\n  viewer {\n    revisions {\n      nodes {\n        __typename\n        ... on Post {\n          id\n          uri\n          isRevision\n        }\n        ... on Page {\n          id\n          uri\n          isRevision\n        }\n      }\n    }\n  }\n  revisions {\n    nodes {\n      __typename\n      ... on Post {\n        id\n        uri\n        isRevision\n      }\n      ... on Page {\n        id\n        uri\n        isRevision\n      }\n    }\n  }\n}\n    `<\/p>\n\n<p>If you were using a fragment to reference: <code>...on UserToContentRevisionUnionConnection<\/code> or <code>...on RootQueryToContentRevisionUnionConnection<\/code> you would need to update those references to <code>...on UserToRevisionsConnection<\/code> and <code>...on RootQueryToRevisionsConnection<\/code> respectively.<\/p>",
        "1.12.0": "<p>This release removes the <code>ContentNode<\/code> and <code>DatabaseIdentifier<\/code> interfaces from the <code>NodeWithFeaturedImage<\/code> Interface.<\/p>\n\n<p>This is considered a breaking change for client applications using a <code>...on NodeWithFeaturedImage<\/code> fragment that reference fields applied by those interfaces. If you have client applications doing this (or are unsure if you do) you can use the following filter to bring back the previous behavior:<\/p>\n\n<pre><code>`php\n<\/code><\/pre>\n\n<p>add_filter( &#039;graphql_wp_interface_type_config&#039;, function( $config ) {\n    if ( $config[&#039;name&#039;] === &#039;NodeWithFeaturedImage&#039; ) {\n        $config[&#039;interfaces&#039;][] = &#039;ContentNode&#039;;\n        $config[&#039;interfaces&#039;][] = &#039;DatabaseIdentifier&#039;;\n    }\n    return $config;\n}, 10, 1 );\n    `<\/p>",
        "1.10.0": "<p>PR (<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2490\">#2490<\/a>) fixes a bug that some users were\nusing as a feature.<\/p>\n\n<p>When a page is marked as the &quot;Posts Page&quot; WordPress does not resolve that page by URI, and this\nbugfix no longer will resolve that page by URI.<\/p>\n\n<p>You can <a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/issues\/2486#issuecomment-1232169375\">read more<\/a>\nabout why this change was made and find a snippet of code that will bring the old functionality back\nif you&#039;ve built features around it.<\/p>",
        "1.9.0": "<p>There are 2 changes that <strong>might<\/strong> require action when updating to 1.9.0.<\/p>\n\n<ol>\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2464\">#2464<\/a>)<\/li>\n<\/ol>\n\n<p>When querying for a <code>nodeByUri<\/code>, if your site has the &quot;page_for_posts&quot; setting configured, the behavior of the <code>nodeByUri<\/code> query for that uri might be different for you.<\/p>\n\n<p>Previously a bug caused this query to return a &quot;Page&quot; type, when it should have returned a &quot;ContentType&quot; Type.<\/p>\n\n<p>The bug fix might change your application if you were using the bug as a feature.<\/p>\n\n<ol start=\"2\">\n<li>(<a href=\"https:\/\/github.com\/wp-graphql\/wp-graphql\/pull\/2457\">#2457<\/a>)<\/li>\n<\/ol>\n\n<p>There were a lot of bug fixes related to connections to ensure they behave as intended. If you were querying lists of data, in some cases the data might be returned in a different order than it was before.<\/p>\n\n<p>For example, using the &quot;last&quot; input on a Comment or User query should still return the same nodes, but in a different order than before.<\/p>\n\n<p>This might cause behavior you don&#039;t want in your application because you had coded around the bug. This change was needed to support proper backward pagination.<\/p>",
        "1.6.7": "<p>There&#039;s been a bugfix in the Post Model layer which <em>might<\/em> break existing behaviors.<\/p>\n\n<p>WordPress Post Type registry allows for a post_type to be registered as <code>public<\/code> (<code>true<\/code> or <code>false<\/code>)\nand <code>publicly_queryable<\/code> (<code>true<\/code> or <code>false<\/code>).<\/p>\n\n<p>WPGraphQL&#039;s Model Layer was allowing published content of any post_type to be exposed publicly. This\nchange better respects the <code>public<\/code> and <code>publicly_queryable<\/code> properties of post types better.<\/p>\n\n<p>Now, if a post_type is <code>public=&amp;gt;true<\/code>, published content of that post_type can be queried by public\nWPGraphQL requests.<\/p>\n\n<p>If a <code>post_type<\/code> is set to <code>public=&amp;gt;false<\/code>, then we fallback to the <code>publicly_queryable<\/code> property.\nIf a post_type is set to <code>publicly_queryable =&amp;gt; true<\/code>, then published content of the Post Type can\nbe queried in WPGraphQL by public users.<\/p>\n\n<p>If both <code>public=&amp;gt;false<\/code> and <code>publicly_queryable<\/code> is <code>false<\/code> or not defined, then the content of the\npost_type will only be accessible via authenticated queries by users with proper capabilities to\naccess the post_type.<\/p>\n\n<p><strong>Possible Action:<\/strong> You might need to adjust your post_type registration to better reflect your intent.<\/p>\n\n<ul>\n<li><code>public=&amp;gt;true<\/code>: The entries in the post_type will be public in WPGraphQL and will have a public\nURI in WordPress.<\/li>\n<li><code>public=&amp;gt;false, publicly_queryable=&amp;gt;true<\/code>: The entries in the post_type will be public in WPGraphQL,\nbut will not have individually respected URI from WordPress, and can not be queried by URI in WPGraphQL.<\/li>\n<li><code>public=&amp;gt;false,publicly_queryable=&amp;gt;false<\/code>: The entries in the post_type will only be accessible in\nWPGraphQL by authenticated requests for users with proper capabilities to interact with the post_type.<\/li>\n<\/ul>",
        "1.5.0": "<p>The <code>MenuItem.path<\/code> field was changed from <code>non-null<\/code> to nullable and some clients may need to make adjustments to support this.<\/p>",
        "1.4.0": "<p>The <code>uri<\/code> field was non-null on some Types in the Schema but has been changed to be nullable on all types that have it. This might require clients to update code to expect possible null values.<\/p>",
        "1.2.0": "<p>Composer dependencies are no longer versioned in Github. Recommended install source is WordPress.org or using Composer to get the code from Packagist.org or WPackagist.org.<\/p>"
    },
    "screenshots": {
        "1": {
            "src": "https:\/\/ps.w.org\/wp-graphql\/assets\/screenshot-1.jpg?rev=2482884",
            "caption": ""
        },
        "2": {
            "src": "https:\/\/ps.w.org\/wp-graphql\/assets\/screenshot-2.jpg?rev=2482884",
            "caption": ""
        }
    },
    "tags": {
        "api": "api",
        "faust": "faust",
        "gatsby": "gatsby",
        "graphql": "GraphQL",
        "json": "JSON"
    },
    "stable_tag": "1.23.0",
    "versions": {
        "0.1.14.1": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.0.1.14.1.zip",
        "0.15.4": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.0.15.4.zip",
        "0.15.5": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.0.15.5.zip",
        "0.15.6": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.0.15.6.zip",
        "1.0": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.0.zip",
        "1.0.1": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.0.1.zip",
        "1.0.2": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.0.2.zip",
        "1.0.3": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.0.3.zip",
        "1.0.4": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.0.4.zip",
        "1.0.5": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.0.5.zip",
        "1.1.0": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.1.0.zip",
        "1.1.1": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.1.1.zip",
        "1.1.2": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.1.2.zip",
        "1.1.3": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.1.3.zip",
        "1.1.4": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.1.4.zip",
        "1.1.5": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.1.5.zip",
        "1.1.6": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.1.6.zip",
        "1.1.7": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.1.7.zip",
        "1.1.8": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.1.8.zip",
        "1.1.8.0": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.1.8.0.zip",
        "1.10.0": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.10.0.zip",
        "1.11.0": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.11.0.zip",
        "1.11.1": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.11.1.zip",
        "1.11.2": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.11.2.zip",
        "1.11.3": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.11.3.zip",
        "1.12.0": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.12.0.zip",
        "1.12.1": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.12.1.zip",
        "1.12.2": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.12.2.zip",
        "1.12.3": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.12.3.zip",
        "1.13.0": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.13.0.zip",
        "1.13.1": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.13.1.zip",
        "1.13.10": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.13.10.zip",
        "1.13.2": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.13.2.zip",
        "1.13.4": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.13.4.zip",
        "1.13.5": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.13.5.zip",
        "1.13.6": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.13.6.zip",
        "1.13.7": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.13.7.zip",
        "1.13.8": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.13.8.zip",
        "1.13.9": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.13.9.zip",
        "1.14.0": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.14.0.zip",
        "1.14.10": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.14.10.zip",
        "1.14.2": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.14.2.zip",
        "1.14.3": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.14.3.zip",
        "1.14.4": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.14.4.zip",
        "1.14.5": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.14.5.zip",
        "1.14.6": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.14.6.zip",
        "1.14.7": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.14.7.zip",
        "1.14.8": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.14.8.zip",
        "1.14.9": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.14.9.zip",
        "1.15.0": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.15.0.zip",
        "1.16.0": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.16.0.zip",
        "1.17.0": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.17.0.zip",
        "1.18.1": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.18.1.zip",
        "1.18.2": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.18.2.zip",
        "1.19.0": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.19.0.zip",
        "1.2.0": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.2.0.zip",
        "1.2.1": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.2.1.zip",
        "1.2.2": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.2.2.zip",
        "1.2.3": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.2.3.zip",
        "1.2.4": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.2.4.zip",
        "1.2.5": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.2.5.zip",
        "1.2.6": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.2.6.zip",
        "1.20.0": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.20.0.zip",
        "1.21.0": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.21.0.zip",
        "1.22.0": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.22.0.zip",
        "1.22.1": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.22.1.zip",
        "1.23.0": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.23.0.zip",
        "1.3.0": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.3.0.zip",
        "1.3.1": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.3.1.zip",
        "1.3.10": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.3.10.zip",
        "1.3.2": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.3.2.zip",
        "1.3.3": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.3.3.zip",
        "1.3.4": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.3.4.zip",
        "1.3.5": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.3.5.zip",
        "1.3.6": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.3.6.zip",
        "1.3.7": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.3.7.zip",
        "1.3.8": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.3.8.zip",
        "1.3.9": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.3.9.zip",
        "1.4.0": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.4.0.zip",
        "1.4.1": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.4.1.zip",
        "1.4.2": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.4.2.zip",
        "1.4.3": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.4.3.zip",
        "1.5.0": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.5.0.zip",
        "1.5.1": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.5.1.zip",
        "1.5.2": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.5.2.zip",
        "1.5.3": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.5.3.zip",
        "1.5.4": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.5.4.zip",
        "1.5.5": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.5.5.zip",
        "1.5.6": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.5.6.zip",
        "1.5.7": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.5.7.zip",
        "1.5.8": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.5.8.zip",
        "1.5.9": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.5.9.zip",
        "1.6.0": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.6.0.zip",
        "1.6.1": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.6.1.zip",
        "1.6.10": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.6.10.zip",
        "1.6.11": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.6.11.zip",
        "1.6.12": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.6.12.zip",
        "1.6.2": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.6.2.zip",
        "1.6.3": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.6.3.zip",
        "1.6.4": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.6.4.zip",
        "1.6.5": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.6.5.zip",
        "1.6.6": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.6.6.zip",
        "1.6.7": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.6.7.zip",
        "1.6.8": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.6.8.zip",
        "1.6.9": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.6.9.zip",
        "1.7.0": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.7.0.zip",
        "1.7.1": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.7.1.zip",
        "1.7.2": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.7.2.zip",
        "1.8.0": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.8.0.zip",
        "1.8.1": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.8.1.zip",
        "1.8.2": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.8.2.zip",
        "1.8.3": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.8.3.zip",
        "1.8.4": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.8.4.zip",
        "1.8.5": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.8.5.zip",
        "1.8.6": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.8.6.zip",
        "1.8.7": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.8.7.zip",
        "1.9.0": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.9.0.zip",
        "1.9.1": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.1.9.1.zip",
        "trunk": "https:\/\/downloads.wordpress.org\/plugin\/wp-graphql.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": {
        "low": "https:\/\/ps.w.org\/wp-graphql\/assets\/banner-772x250.png?rev=2482884",
        "high": "https:\/\/ps.w.org\/wp-graphql\/assets\/banner-1544x500.png?rev=2482884"
    },
    "icons": {
        "1x": "https:\/\/ps.w.org\/wp-graphql\/assets\/icon-128x128.png?rev=2482884",
        "2x": "https:\/\/ps.w.org\/wp-graphql\/assets\/icon-256x256.png?rev=2482884"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 98,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}